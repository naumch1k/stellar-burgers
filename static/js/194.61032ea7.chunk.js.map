{"version":3,"file":"static/js/194.61032ea7.chunk.js","mappings":"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","sources":["webpack://stellar-burgers/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.tsx","webpack://stellar-burgers/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.tsx","webpack://stellar-burgers/./src/components/NutritionFacts/NutritionFacts.module.css?58df","components/NutritionFacts/NutritionFacts.tsx","components/NutritionFactsModal/NutritionFactsModal.tsx","store/burgerConstructor/burgerConstructor.selectors.ts","hooks/useModal.ts","webpack://stellar-burgers/./src/components/Ingredient/Ingredient.module.css?c283","components/Ingredient/Ingredient.tsx","webpack://stellar-burgers/./src/components/IngredientList/IngredientList.module.css?3cb3","components/IngredientList/IngredientList.tsx","webpack://stellar-burgers/./src/components/IngredientGroup/IngredientGroup.module.css?af01","components/IngredientGroup/IngredientGroup.tsx","shared/constants/ingredientGroups.ts","shared/helpers/capitalizeFirstLetter.ts","webpack://stellar-burgers/./src/components/BurgerIngredients/BurgerIngredients.module.css?02b9","components/BurgerIngredients/BurgerIngredients.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BunElement/BunElement.module.css?ca38","components/BurgerConstructor/BunElement/BunElement.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/FillingList/Item/FillingListItem.module.css?4d1a","components/BurgerConstructor/FillingList/Item/FillingListItem.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/FillingList/FillingList.module.css?9967","components/BurgerConstructor/FillingList/FillingList.tsx","store/order/order.selectors.ts","webpack://stellar-burgers/./src/components/OrderConfirmation/OrderConfirmation.module.css?c6e1","components/OrderConfirmation/OrderConfirmation.tsx","components/OrderConfirmationModal/OrderConfirmationModal.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/SubmitGroup/SubmitGroup.module.css?f29d","components/BurgerConstructor/SubmitGroup/SubmitGroup.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BurgerConstructor.module.css?285f","components/BurgerConstructor/BurgerConstructor.tsx","webpack://stellar-burgers/./src/pages/BurgerBuilder/BurgerBuilder.module.css?917a","pages/BurgerBuilder/BurgerBuilder.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ErrorMessage_root__kSKWw\"};","import { ReactNode } from 'react'\nimport styles from './ErrorMessage.module.css'\n\ninterface IErrorMessageProps {\n  children: ReactNode;\n}\n\nexport const ErrorMessage = ({ children }: IErrorMessageProps) => (\n  <p className={`${styles.root} text text_type_main-large text_color_inactive`}>\n    {children}\n  </p>\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Modal_root__z7+I3\",\"isOpen\":\"Modal_isOpen__zYv3o\",\"container\":\"Modal_container__Ha+Ky\",\"closeButton\":\"Modal_closeButton__Ya+Ev\"};","import { MouseEvent, ReactNode } from 'react'\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport styles from './Modal.module.css'\n\ninterface IModalProps {\n  isOpen: boolean;\n  onClose: () => void | undefined;\n  onBackdropClick:(e: MouseEvent) => void;\n  children: ReactNode;\n}\n\nexport const Modal = ({\n  isOpen,\n  onClose,\n  onBackdropClick,\n  children,\n}: IModalProps) => (\n  <div\n    className={`${styles.root} ${isOpen ? `${styles.isOpen}` : ''}`}\n    onClick={onBackdropClick}\n  >\n    <div className={`${styles.container} pt-25 pr-10 pb-25 pl-10`}>\n      {children}\n      <button\n        className={styles.closeButton}\n        type='button'\n        aria-label='Close modal'\n        onClick={onClose}\n      >\n        <CloseIcon type=\"primary\"/>\n      </button>\n    </div>\n  </div>\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NutritionFacts_root__RjsFs\",\"image\":\"NutritionFacts_image__p-fix\",\"list\":\"NutritionFacts_list__on7pF\",\"listItem\":\"NutritionFacts_listItem__ffIlj\"};","import { useSelector } from 'react-redux'\nimport { IRootState } from 'store/store'\nimport { selectIngredientById } from 'store/ingredients/ingredients.selectors'\nimport styles from './NutritionFacts.module.css'\n\ninterface INutritionFactsProps {\n  ingredientId: string;\n}\n\nexport const NutritionFacts = ({ ingredientId }: INutritionFactsProps) => {\n  const ingredient = useSelector((state: IRootState) => selectIngredientById(state, ingredientId))\n  const {\n    name,\n    calories,\n    carbohydrates,\n    fat,\n    proteins,\n    image_large,\n  } = ingredient!\n\n  const descriptionTermClasses = 'mb-2 text text_type_main-default text_color_inactive'\n  const descriptionDetailsClasses = 'mb-2 text text_type_digits-default text_color_inactive'\n\n  return (\n    <div className={styles.root}>\n      <h2 className='text text_type_main-large'>Nutrition Facts</h2>\n      <img className={`${styles.image} mt-4`} src={image_large} alt={name}/>\n      <p className='mt-4 text text_type_main-medium'>{name}</p>\n      <dl className={styles.list}>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Calories</dt>\n          <dd className={descriptionDetailsClasses}>{calories}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Carb.</dt>\n          <dd className={descriptionDetailsClasses}>{carbohydrates}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Fat</dt>\n          <dd className={descriptionDetailsClasses}>{fat}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Protein</dt>\n          <dd className={descriptionDetailsClasses}>{proteins}</dd>\n        </div>\n      </dl>\n    </div>\n  )\n}\n","import { MouseEvent } from 'react'\nimport { Modal } from 'components/Modal'\nimport { NutritionFacts } from 'components/NutritionFacts/NutritionFacts'\n\ninterface INutritionFactsModalProps {\n  isOpen: boolean;\n  onClose: () => void | undefined;\n  onBackdropClick:(e: MouseEvent) => void;\n  ingredientId: string;\n}\n\nexport const NutritionFactsModal = ({\n  isOpen,\n  onClose,\n  onBackdropClick,\n  ingredientId,\n}: INutritionFactsModalProps) => (\n  <Modal\n    isOpen={isOpen}\n    onClose={onClose}\n    onBackdropClick={onBackdropClick}\n  >\n    <NutritionFacts ingredientId={ingredientId}/>\n  </Modal>\n)\n","import { createSelector } from '@reduxjs/toolkit'\nimport type { IRootState } from '../store'\n\nconst selectFillingEntities = (state: IRootState) => state.burgerConstructor.fillings\n\nexport const selectFillings = createSelector(\n  selectFillingEntities,\n  entities => Object.values(entities)\n)\n\nexport const selectBun = (state: IRootState) => state.burgerConstructor.bun\n\nconst selectAllIngredients = (state: IRootState) =>\n  [state.burgerConstructor.bun, ...state.burgerConstructor.fillings]\n\nexport const selectIngredientCount = createSelector(\n  [selectAllIngredients, (_, id: string) => id],\n  (ingredients, id) => {\n    const count = ingredients.reduce((count, ingredient) => {\n      if (ingredient?._id === id) {\n        return count + (ingredient.type === 'bun' ? 2 : 1)\n      }\n      return count\n    }, 0)\n    return count\n  }\n)\n","import { useState, MouseEvent } from 'react'\nimport { useAppDispatch } from 'store/store'\nimport { ingredientsCleared } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { orderNumberCleared, errorCleared } from 'store/order/order.slice'\n\nexport const useModal = () => {\n  const dispatch = useAppDispatch()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const openModal = () => setIsModalOpen(true)\n  const closeModal = () => setIsModalOpen(false)\n\n  const closeByBackdropClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) setIsModalOpen(false)\n  }\n\n  const closeOrderConfirmationModal = () => {\n    dispatch(orderNumberCleared())\n    dispatch(ingredientsCleared())\n    closeModal()\n  }\n\n  const closeOrderErrorModal = () => {\n    dispatch(errorCleared())\n    closeModal()\n  }\n\n  return {\n    isModalOpen,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n    closeOrderConfirmationModal,\n    closeOrderErrorModal,\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ingredient_root__Zh74E\",\"beingDragged\":\"Ingredient_beingDragged__pJKPQ\",\"name\":\"Ingredient_name__bUorL\",\"price\":\"Ingredient_price__CIEQs\"};","import { useSelector } from 'react-redux'\nimport { useDrag } from 'react-dnd'\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { NutritionFactsModal } from 'components/NutritionFactsModal'\nimport { IRootState } from 'store/store'\nimport { selectIngredientById } from 'store/ingredients/ingredients.selectors'\nimport { selectIngredientCount } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { useModal } from 'hooks/useModal'\nimport styles from './Ingredient.module.css'\n\ninterface IIngredientProps {\n  id: string;\n}\n\nexport const Ingredient = ({ id }: IIngredientProps) => {\n  const ingredient = useSelector((state: IRootState) => selectIngredientById(state, id))\n  const { name, image, price } = ingredient!\n  const count = useSelector(state => selectIngredientCount(state, id))\n  const {\n    isModalOpen,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n  } = useModal()\n\n  const [{ beingDragged }, dragRef] = useDrag({\n    type: 'ingredient',\n    item: ingredient,\n    collect: monitor => ({\n      beingDragged: monitor.isDragging(),\n    }),\n  })\n\n  return (\n    <>\n      <li\n        ref={dragRef}\n        className={`${styles.root} ${beingDragged ? `${styles.beingDragged}` : ''}`}\n        onClick={openModal}\n      >\n        <img className='mr-4 ml-4' src={image} alt={name}/>\n        <div className='pt-2'>\n          <p className={`${styles.price} text text_type_digits-default`}>\n            <span className='mr-2'>{price}</span>\n            <CurrencyIcon type='primary'/>\n          </p>\n          <p className={`${styles.name} text text_type_main-default mt-2`}>{name}</p>\n        </div>\n        {count > 0 && <Counter count={count} size='default'/>}\n      </li>\n      {isModalOpen &&\n      <NutritionFactsModal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onBackdropClick={closeByBackdropClick}\n        ingredientId={id}\n      />\n      }\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"IngredientList_root__1m0nr\"};","import { Ingredient } from 'components/Ingredient'\nimport styles from './IngredientList.module.css'\n\ninterface IngredientListProps {\n  ingredientIds: string[];\n}\n\nexport const IngredientList = ({ ingredientIds }: IngredientListProps) => (\n  <ul className={`${styles.root} pr-4 pb-10 pl-4`}>\n    {ingredientIds.map(ingredientId => (\n      <Ingredient\n        key={ingredientId}\n        id={ingredientId}\n      />\n    ))}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"IngredientGroup_name__h7cBm\"};","import { forwardRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Loader } from 'components/Loader'\nimport { IngredientList } from 'components/IngredientList'\nimport {\n  selectIsFetching,\n  selectIngredientIdsByType,\n} from 'store/ingredients/ingredients.selectors'\nimport { IRootState } from 'store/store'\nimport styles from './IngredientGroup.module.css'\n\ninterface IngredientGroupProps {\n  type: string;\n}\n\nexport const IngredientGroup = forwardRef<HTMLHeadingElement, IngredientGroupProps>(\n  ({ type }, ref) => {\n\n  const isFetching = useSelector(selectIsFetching)\n  const ingredientIds = useSelector((state: IRootState) => selectIngredientIdsByType(state, type))\n\n  if (isFetching) return <Loader/>\n\n  return (\n    <li>\n      <h2 ref={ref} className={`${styles.name} text text_type_main-medium mb-6`}>{type}</h2>\n      <IngredientList\n        ingredientIds={ingredientIds}\n      />\n    </li>\n  )\n})\n","export const IngredientGroups = {\n  BUNS: 'BUNS',\n  BURGERS: 'BURGERS',\n  TOPPINGS: 'TOPPINGS',\n}\n","export const capitalizeFirstLetter = (string: string) => {\n  if (string.length === 0) return string\n\n  const lowercaseString = string.toLowerCase()\n  return lowercaseString.charAt(0).toUpperCase() + lowercaseString.slice(1)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tabBar\":\"BurgerIngredients_tabBar__jn4fI\",\"menu\":\"BurgerIngredients_menu__X3WWl\"};","import { useState, useRef } from 'react'\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/tab'\nimport { IngredientGroup } from 'components/IngredientGroup'\nimport { IngredientGroups } from 'shared/constants/ingredientGroups'\nimport { capitalizeFirstLetter } from 'shared/helpers/capitalizeFirstLetter'\nimport styles from './BurgerIngredients.module.css'\n\nconst { BUNS, BURGERS, TOPPINGS } = IngredientGroups\n\nexport const BurgerIngredients = () => {\n  const [currentTab, setCurrentTab] = useState(IngredientGroups.BUNS)\n  const ingredientsRef = useRef<HTMLUListElement>(null)\n  const bunsIngredientGroupRef = useRef<HTMLHeadingElement>(null)\n  const burgersIngredientGroupRef = useRef<HTMLHeadingElement>(null)\n  const toppingsIngredientGroupRef = useRef<HTMLHeadingElement>(null)\n\n  const scrollToRef = (ref: React.RefObject<HTMLHeadingElement>) => {\n    if (ref.current) {\n      ref.current.scrollIntoView({ behavior: 'smooth' })\n    }\n  }\n\n  const handleTabClick = (ingredientGroup: string) => {\n\t\tswitch (ingredientGroup) {\n\t\t\tcase BUNS: {\n        scrollToRef(bunsIngredientGroupRef)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase BURGERS: {\n        scrollToRef(burgersIngredientGroupRef)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase TOPPINGS: {\n        scrollToRef(toppingsIngredientGroupRef)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n  const handleIngredientsScroll = () => {\n    const lineY = ingredientsRef.current?.getBoundingClientRect().y\n    const bunsOffset = Math.abs(bunsIngredientGroupRef.current!.getBoundingClientRect().y - (lineY as number))\n    const burgersOffset = Math.abs(burgersIngredientGroupRef.current!.getBoundingClientRect().y - (lineY as number))\n\t\tconst toppingsOffset = Math.abs(toppingsIngredientGroupRef.current!.getBoundingClientRect().y - (lineY as number))\n\n    if (bunsOffset < burgersOffset && bunsOffset < toppingsOffset)\n      setCurrentTab(BUNS)\n\t\tif (burgersOffset < bunsOffset && burgersOffset < toppingsOffset)\n      setCurrentTab(BURGERS)\n    if (toppingsOffset < bunsOffset && toppingsOffset < burgersOffset)\n      setCurrentTab(TOPPINGS)\n  }\n\n  return (\n    <section className='mt-10'>\n      <h1 className='text text_type_main-large'>Build Your Own Burger</h1>\n      <ul className={`${styles.tabBar} mt-5`}>\n        {Object.keys(IngredientGroups).map(item => (\n          <li key={item}>\n            <Tab\n              active={currentTab === item}\n              value={item}\n              onClick={handleTabClick}\n            >\n              {capitalizeFirstLetter(item)}\n            </Tab>\n          </li>\n        ))}\n      </ul>\n      <ul\n        className={`${styles.menu} custom-scroll`}\n        ref={ingredientsRef}\n        onScroll={handleIngredientsScroll}\n      >\n        <IngredientGroup\n          type='bun'\n          ref={bunsIngredientGroupRef}\n        />\n        <IngredientGroup\n          type='burger'\n          ref={burgersIngredientGroupRef}\n        />\n        <IngredientGroup\n          type='topping'\n          ref={toppingsIngredientGroupRef}\n        />\n      </ul>\n    </section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BunElement_root__P2lJ4\"};","import { useSelector } from 'react-redux'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { selectBun } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport styles from './BunElement.module.css'\n\ninterface IBunElementProps {\n  type: 'top' | 'bottom';\n}\n\nexport const BunElement = ({ type }: IBunElementProps) => {\n  const bun = useSelector(selectBun)\n\n  return (\n    <div className={`${styles.root} ml-8 pr-4`}>\n      <ConstructorElement\n        type={type}\n        text={bun ? `${bun.name} ${type === 'top' ? '(top)' : '(bottom)'}` : 'Choose your bun'}\n        price={bun ? bun.price : 0}\n        thumbnail={bun ? bun.image : 'https://stellarburgers.nomoreparties.site/static/media/loading.89540200.svg'}\n        isLocked\n      />\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FillingListItem_root__Kz4P+\",\"isHovered\":\"FillingListItem_isHovered__6iFKh\"};","import { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { DragIcon } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons'\nimport { useAppDispatch } from 'store/store'\nimport { fillingMoved, fillingDeleted } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { IIngredient } from 'shared/types/ingredient'\nimport styles from './FillingListItem.module.css'\n\ninterface IFillingListItemProps {\n  index: number;\n  ingredient: IIngredient;\n}\n\ninterface IDraggedItem {\n  index: number;\n}\n\nexport const FillingListItem = ({ index, ingredient }: IFillingListItemProps) => {\n  const dispatch = useAppDispatch()\n  const { name, price, image } = ingredient\n\n  const [, dragRef] = useDrag({\n    type: 'addedIngredient',\n    item: () => {\n      return { index }\n    },\n  })\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'addedIngredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver(),\n    }),\n    drop: (item: IDraggedItem) => {\n      if (item.index === index) return\n\n      dispatch(fillingMoved({ fromIndex: item.index, toIndex: index }))\n    },\n  })\n\n  const onDelete = () => dispatch(fillingDeleted(index))\n\n\n  const ref = useRef<HTMLLIElement>(null)\n  dragRef(dropRef(ref))\n\n  return (\n    <li\n      ref={ref}\n      className={`${styles.root} ${isHovered ? `${styles.isHovered}` : ''} mt-4 mb-4`}\n    >\n      <DragIcon type=\"primary\"/>\n      <ConstructorElement\n        text={name}\n        thumbnail={image}\n        price={price}\n        handleClose={onDelete}\n      />\n    </li>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FillingList_root__CWjeS\"};","import { useSelector } from 'react-redux'\nimport { FillingListItem } from './Item'\nimport { selectFillings } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { IIngredient } from 'shared/types/ingredient'\nimport styles from './FillingList.module.css'\n\nexport const FillingList = () => {\n  const fillings = useSelector(selectFillings)\n\n  return (\n    <ul className={`${styles.root} custom-scroll`}>\n      {fillings.map((ingredient: IIngredient, i) => (\n        <FillingListItem\n          // TODO: When using _id as a key\n          // 'Encountered two children with the same key'\n          key={ingredient._id}\n          // TODO: check if id can be used here\n          index={i}\n          ingredient={ingredient}\n        />\n      ))}\n    </ul>\n  )\n}\n","import { IRootState } from '../store'\n\nexport const selectOrderState = (state: IRootState) => state.order\n\nexport const selectOrderNumber = (state: IRootState) => state.order.number\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OrderConfirmation_root__25rwU\",\"orderNumber\":\"OrderConfirmation_orderNumber__h5AyN\"};","import { useSelector } from 'react-redux'\nimport { selectOrderNumber } from 'store/order/order.selectors'\nimport successImage from 'images/success.png'\nimport styles from './OrderConfirmation.module.css'\n\nexport const OrderConfirmation = () => {\n  const orderNumber = useSelector(selectOrderNumber)\n\n  return (\n    <div className={styles.root}>\n      <span className='mb-8 text text_type_main-medium'>Your order number is</span>\n      <h2 className={`${styles.orderNumber} text text_type_digits-large`}>{orderNumber}</h2>\n      <img className='mt-15 mb-15' src={successImage} alt='Success icon'/>\n      <p className='mb-2 text text_type_main-default'>your order is being prepared</p>\n      <p className='text text_type_main-default text_color_inactive'>be ready to pick it up at the orbital station</p>\n    </div>\n  )\n}\n","import { MouseEvent } from 'react'\nimport { Modal } from 'components/Modal'\nimport { OrderConfirmation } from 'components/OrderConfirmation'\n\ninterface IOrderConfirmationModalProps {\n  isOpen: boolean;\n  onClose: () => void | undefined;\n  onBackdropClick:(e: MouseEvent) => void;\n}\n\nexport const OrderConfirmationModal = ({\n  isOpen,\n  onClose,\n  onBackdropClick,\n}: IOrderConfirmationModalProps) => (\n  <Modal\n    isOpen={isOpen}\n    onClose={onClose}\n    onBackdropClick={onBackdropClick}\n  >\n    <OrderConfirmation/>\n  </Modal>\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SubmitGroup_root__OQ4Lo\",\"button\":\"SubmitGroup_button__68UXa\"};","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { Button } from 'components/ui/Button'\nimport { Loader } from 'components/Loader'\nimport { OrderConfirmationModal } from 'components/OrderConfirmationModal'\nimport { useAppDispatch } from 'store/store'\nimport { selectBun, selectFillings } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { placeOrderRequest } from 'store/order/order.operations'\nimport { selectOrderState } from 'store/order/order.selectors'\nimport { useModal } from 'hooks/useModal'\nimport { IIngredient } from 'shared/types/ingredient'\nimport styles from './SubmitGroup.module.css'\nimport { Modal } from 'components/Modal'\nimport { ErrorMessage } from 'components/ErrorMessage'\n\nexport const SubmitGroup = () => {\n  const dispatch = useAppDispatch()\n  const { isFetching, error } = useSelector(selectOrderState)\n  const bun = useSelector(selectBun)\n  const fillings = useSelector(selectFillings)\n  const {\n    isModalOpen,\n    openModal,\n    closeOrderConfirmationModal,\n    closeOrderErrorModal,\n  } = useModal()\n\n  const bunsPrice = useMemo(() => bun ? bun.price * 2 : 0, [bun])\n  const fillingsPrice = useMemo(() => fillings.reduce((prev: number, filling: IIngredient) => prev + filling.price, 0), [fillings])\n  const totalPrice = bunsPrice + fillingsPrice\n\n  const handlePlaceOrderClick = () => {\n    if (bun && fillings.length) {\n      const ingredients = [bun, ...fillings, bun]\n        .map((ingredient: IIngredient) => ingredient._id)\n\n      dispatch(placeOrderRequest({ ingredients }))\n        .then(() => openModal())\n    }\n  }\n\n  return (\n    <>\n      <div className={`${styles.root} mt-10 pr-4 pl-4`}>\n        <span className='text text_type_digits-medium mr-10'>\n          {totalPrice}\n          {' '}\n          <CurrencyIcon type='primary' />\n        </span>\n        <div className={styles.button}>\n          <Button\n            type='button'\n            view='primary'\n            size='large'\n            onClick={handlePlaceOrderClick}\n            disabled={!bun || !fillings.length}\n          >\n            Place an order\n          </Button>\n          {isFetching && <Loader/>}\n        </div>\n        {!error && isModalOpen &&\n          <OrderConfirmationModal\n            isOpen={isModalOpen}\n            onClose={closeOrderConfirmationModal}\n            onBackdropClick={closeOrderConfirmationModal}\n          />\n        }\n        {error &&\n          <Modal\n            isOpen={isModalOpen}\n            onClose={closeOrderErrorModal}\n            onBackdropClick={closeOrderErrorModal}\n          >\n            <ErrorMessage>\n              {error}\n            </ErrorMessage>\n          </Modal>\n        }\n      </div>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerConstructor_root__fVIgZ\",\"isHovered\":\"BurgerConstructor_isHovered__i8Ijv\"};","import { useDrop } from 'react-dnd'\nimport { BunElement } from './BunElement'\nimport { FillingList } from './FillingList'\nimport { SubmitGroup } from './SubmitGroup'\nimport { useAppDispatch } from 'store/store'\nimport { bunAdded, fillingAdded } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { IIngredient } from 'shared/types/ingredient'\nimport styles from './BurgerConstructor.module.css'\n\nexport const BurgerConstructor = () => {\n  const dispatch = useAppDispatch()\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'ingredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver()\n    }),\n    drop: (item: IIngredient) => {\n      handleDrop(item)\n    },\n  })\n\n  const handleDrop = (ingredient: IIngredient) => {\n    if (ingredient.type === 'bun') {\n      dispatch(bunAdded(ingredient))\n    } else {\n      dispatch(fillingAdded(ingredient))\n    }\n  }\n\n  return (\n    <section className={`${styles.root} pt-25 pb-10`}>\n      <div ref={dropRef} className={isHovered ? `${styles.isHovered}` : ''}>\n        <BunElement type='top'/>\n        <FillingList/>\n        <BunElement type='bottom'/>\n      </div>\n      <SubmitGroup/>\n    </section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerBuilder_root__M-A1J\"};","import { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { BurgerIngredients } from 'components/BurgerIngredients'\nimport { BurgerConstructor } from 'components/BurgerConstructor'\nimport styles from './BurgerBuilder.module.css'\n\nconst BurgerBuilder = () => (\n  <div className={styles.root}>\n    <DndProvider backend={HTML5Backend}>\n      <BurgerIngredients/>\n      <BurgerConstructor/>\n    </DndProvider>\n  </div>\n)\n\nexport default BurgerBuilder\n"],"names":["ErrorMessage","_ref","children","_jsx","className","concat","styles","Modal","isOpen","onClose","onBackdropClick","onClick","_jsxs","type","CloseIcon","NutritionFacts","ingredientId","ingredient","useSelector","state","selectIngredientById","name","calories","carbohydrates","fat","proteins","image_large","descriptionTermClasses","descriptionDetailsClasses","src","alt","NutritionFactsModal","selectFillings","createSelector","burgerConstructor","fillings","entities","Object","values","selectBun","bun","selectIngredientCount","_","id","ingredients","reduce","count","_id","useModal","dispatch","useAppDispatch","isModalOpen","setIsModalOpen","useState","closeModal","openModal","closeByBackdropClick","e","target","currentTarget","closeOrderConfirmationModal","orderNumberCleared","ingredientsCleared","closeOrderErrorModal","errorCleared","Ingredient","image","price","beingDragged","dragRef","useDrag","item","collect","monitor","isDragging","_Fragment","ref","CurrencyIcon","Counter","size","IngredientList","ingredientIds","map","IngredientGroup","forwardRef","isFetching","selectIsFetching","selectIngredientIdsByType","Loader","IngredientGroups","BUNS","BURGERS","TOPPINGS","capitalizeFirstLetter","string","length","lowercaseString","toLowerCase","charAt","toUpperCase","slice","BurgerIngredients","currentTab","setCurrentTab","ingredientsRef","useRef","bunsIngredientGroupRef","burgersIngredientGroupRef","toppingsIngredientGroupRef","scrollToRef","current","scrollIntoView","behavior","handleTabClick","ingredientGroup","keys","Tab","active","value","onScroll","handleIngredientsScroll","_ingredientsRef$curre","lineY","getBoundingClientRect","y","bunsOffset","Math","abs","burgersOffset","toppingsOffset","BunElement","ConstructorElement","text","thumbnail","isLocked","FillingListItem","index","isHovered","dropRef","useDrop","accept","isOver","drop","fillingMoved","fromIndex","toIndex","DragIcon","handleClose","onDelete","fillingDeleted","FillingList","i","selectOrderState","order","selectOrderNumber","number","OrderConfirmation","orderNumber","successImage","OrderConfirmationModal","SubmitGroup","error","totalPrice","useMemo","prev","filling","Button","view","handlePlaceOrderClick","placeOrderRequest","then","disabled","BurgerConstructor","handleDrop","bunAdded","fillingAdded","BurgerBuilder","DndProvider","backend","HTML5Backend"],"sourceRoot":""}