{"version":3,"file":"static/js/473.28404ce2.chunk.js","mappings":"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","sources":["webpack://stellar-burgers/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.tsx","store/burgerConstructor/burgerConstructor.selectors.ts","webpack://stellar-burgers/./src/components/Ingredient/Ingredient.module.css?c283","components/Ingredient/Ingredient.tsx","webpack://stellar-burgers/./src/components/IngredientList/IngredientList.module.css?3cb3","components/IngredientList/IngredientList.tsx","components/IngredientGroup/IngredientGroup.tsx","webpack://stellar-burgers/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.tsx","webpack://stellar-burgers/./src/components/NutritionFacts/NutritionFacts.module.css?58df","components/NutritionFacts/NutritionFacts.tsx","components/NutritionFactsModal/NutritionFactsModal.tsx","components/NutritionFactsModal/hooks/useNutritionFactsModal.ts","shared/constants/ingredientGroups.ts","components/BurgerIngredients/hooks/useIngredientsScroll.ts","webpack://stellar-burgers/./src/components/BurgerIngredients/BurgerIngredients.module.css?02b9","components/BurgerIngredients/BurgerIngredients.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BunElement/BunElement.module.css?ca38","components/BurgerConstructor/BunElement/BunElement.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/FillingList/Item/FillingListItem.module.css?4d1a","components/BurgerConstructor/FillingList/Item/FillingListItem.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/FillingList/FillingList.module.css?9967","components/BurgerConstructor/FillingList/FillingList.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/OrderConfirmation/OrderConfirmation.module.css?f855","components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/OrderConfirmation/OrderConfirmation.tsx","store/order/order.selectors.ts","components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/hooks/useOrderConfirmationModal.ts","components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/OrderConfirmationModal.tsx","components/ErrorModal/hooks/useErrorModal.ts","webpack://stellar-burgers/./src/components/ErrorModal/ErrorModal.module.css?c843","components/ErrorModal/ErrorModal.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/SubmitGroup/SubmitGroup.module.css?f29d","components/BurgerConstructor/SubmitGroup/SubmitGroup.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BurgerConstructor.module.css?285f","components/BurgerConstructor/BurgerConstructor.tsx","webpack://stellar-burgers/./src/pages/BurgerBuilder/BurgerBuilder.module.css?917a","pages/BurgerBuilder/BurgerBuilder.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ErrorMessage_root__kSKWw\"};","import { ReactNode } from 'react'\nimport styles from './ErrorMessage.module.css'\n\ninterface IErrorMessageProps {\n  children: ReactNode;\n}\n\nexport const ErrorMessage = ({ children }: IErrorMessageProps) => (\n  <p className={`${styles.root} text text_type_main-large`}>\n    {children}\n  </p>\n)\n","import { createSelector } from '@reduxjs/toolkit'\nimport type { IRootState } from '../store'\n\nconst selectFillingEntities = (state: IRootState) => state.burgerConstructor.fillings\n\nexport const selectFillings = createSelector(\n  selectFillingEntities,\n  entities => Object.values(entities)\n)\n\nexport const selectBun = (state: IRootState) => state.burgerConstructor.bun\n\nconst selectAllIngredients = (state: IRootState) =>\n  [state.burgerConstructor.bun, ...state.burgerConstructor.fillings]\n\nexport const selectIngredientCount = createSelector(\n  [selectAllIngredients, (_, id: string) => id],\n  (ingredients, id) => {\n    const count = ingredients.reduce((count, ingredient) => {\n      if (ingredient?._id === id) {\n        return count + (ingredient.type === 'bun' ? 2 : 1)\n      }\n      return count\n    }, 0)\n    return count\n  }\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ingredient_root__Zh74E\",\"beingDragged\":\"Ingredient_beingDragged__pJKPQ\",\"name\":\"Ingredient_name__bUorL\",\"price\":\"Ingredient_price__CIEQs\"};","import { useSelector } from 'react-redux'\nimport { useDrag } from 'react-dnd'\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { IRootState, useAppDispatch } from 'store/store'\nimport { selectIngredientById } from 'store/ingredients/ingredients.selectors'\nimport { selectIngredientCount } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { setPreviewedIngredientId } from 'store/ingredients/ingredients.slice'\nimport styles from './Ingredient.module.css'\n\ninterface IIngredientProps {\n  id: string;\n}\n\nexport const Ingredient = ({ id }: IIngredientProps) => {\n  const dispatch = useAppDispatch()\n  const ingredient = useSelector((state: IRootState) => selectIngredientById(state, id))\n  const { name, image, price } = ingredient!\n  const count = useSelector(state => selectIngredientCount(state, id))\n\n  const [{ beingDragged }, dragRef] = useDrag({\n    type: 'ingredient',\n    item: ingredient,\n    collect: monitor => ({\n      beingDragged: monitor.isDragging(),\n    }),\n  })\n\n  const handleIngredientClick = (id: string) => dispatch(setPreviewedIngredientId(id))\n\n  return (\n    <>\n      <li\n        ref={dragRef}\n        className={`${styles.root} ${beingDragged ? `${styles.beingDragged}` : ''}`}\n        onClick={() => handleIngredientClick(id)}\n      >\n        <img className='mr-4 ml-4' src={image} alt={name}/>\n        <div className='pt-2'>\n          <p className={`${styles.price} text text_type_digits-default`}>\n            <span className='mr-2'>{price}</span>\n            <CurrencyIcon type='primary'/>\n          </p>\n          <p className={`${styles.name} text text_type_main-default mt-2`}>{name}</p>\n        </div>\n        {count > 0 && <Counter count={count} size='default'/>}\n      </li>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"IngredientList_root__1m0nr\"};","import { Ingredient } from 'components/Ingredient'\nimport styles from './IngredientList.module.css'\n\ninterface IngredientListProps {\n  ingredientIds: string[];\n}\n\nexport const IngredientList = ({ ingredientIds }: IngredientListProps) => (\n  <ul className={`${styles.root} pr-4 pb-10 pl-4`}>\n    {ingredientIds.map(ingredientId => (\n      <Ingredient\n        key={ingredientId}\n        id={ingredientId}\n      />\n    ))}\n  </ul>\n)\n","import { forwardRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Loader } from 'components/Loader'\nimport { IngredientList } from 'components/IngredientList'\nimport {\n  selectIsFetching,\n  selectIngredientIdsByType,\n} from 'store/ingredients/ingredients.selectors'\nimport { IRootState } from 'store/store'\nimport { IIngredientGroup } from 'shared/types'\n\nexport const IngredientGroup = forwardRef<HTMLHeadingElement, IIngredientGroup>(\n  ({ type, label }, ref) => {\n\n  const isFetching = useSelector(selectIsFetching)\n  const ingredientIds = useSelector((state: IRootState) => selectIngredientIdsByType(state, type))\n\n  if (isFetching) return <Loader/>\n\n  return (\n    <li>\n      <h2 ref={ref} className='text text_type_main-medium mb-6'>{label}</h2>\n      <IngredientList ingredientIds={ingredientIds}/>\n    </li>\n  )\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Modal_root__z7+I3\",\"isOpen\":\"Modal_isOpen__zYv3o\",\"container\":\"Modal_container__Ha+Ky\",\"closeButton\":\"Modal_closeButton__Ya+Ev\"};","import { MouseEvent, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport styles from './Modal.module.css'\n\ninterface IModalProps {\n  isOpen: boolean;\n  onClose: () => void | undefined;\n  onBackdropClick:(e: MouseEvent) => void;\n  children: ReactNode;\n}\n\nexport const Modal = ({\n  isOpen,\n  onClose,\n  onBackdropClick,\n  children,\n}: IModalProps) => {\n  return createPortal(\n    <div\n      className={`${styles.root} ${isOpen ? `${styles.isOpen}` : ''}`}\n      onClick={onBackdropClick}\n    >\n      <div className={`${styles.container} pt-25 pr-10 pb-25 pl-10`}>\n        {children}\n        <button\n          className={styles.closeButton}\n          type='button'\n          aria-label='Close modal'\n          onClick={onClose}\n        >\n          <CloseIcon type='primary'/>\n        </button>\n      </div>\n    </div>,\n    document.querySelector('.portal')!\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NutritionFacts_root__RjsFs\",\"image\":\"NutritionFacts_image__p-fix\",\"list\":\"NutritionFacts_list__on7pF\",\"listItem\":\"NutritionFacts_listItem__ffIlj\"};","import { useSelector } from 'react-redux'\nimport { IRootState } from 'store/store'\nimport { selectIngredientById } from 'store/ingredients/ingredients.selectors'\nimport styles from './NutritionFacts.module.css'\n\ninterface INutritionFactsProps {\n  ingredientId: string;\n}\n\nexport const NutritionFacts = ({ ingredientId }: INutritionFactsProps) => {\n  const ingredient = useSelector((state: IRootState) => selectIngredientById(state, ingredientId))\n  const {\n    name,\n    calories,\n    carbohydrates,\n    fat,\n    proteins,\n    image_large,\n  } = ingredient!\n\n  const descriptionTermClasses = 'mb-2 text text_type_main-default text_color_inactive'\n  const descriptionDetailsClasses = 'mb-2 text text_type_digits-default text_color_inactive'\n\n  return (\n    <div className={styles.root}>\n      <h2 className='text text_type_main-large'>Nutrition Facts</h2>\n      <img className={`${styles.image} mt-4`} src={image_large} alt={name}/>\n      <p className='mt-4 text text_type_main-medium'>{name}</p>\n      <dl className={styles.list}>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Calories</dt>\n          <dd className={descriptionDetailsClasses}>{calories}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Carb.</dt>\n          <dd className={descriptionDetailsClasses}>{carbohydrates}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Fat</dt>\n          <dd className={descriptionDetailsClasses}>{fat}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Protein</dt>\n          <dd className={descriptionDetailsClasses}>{proteins}</dd>\n        </div>\n      </dl>\n    </div>\n  )\n}\n","import { Modal } from 'components/Modal'\nimport { NutritionFacts } from 'components/NutritionFacts'\nimport { useNutritionFactsModal } from './hooks/useNutritionFactsModal'\n\nexport const NutritionFactsModal = () => {\n  const {\n    isModalOpen,\n    previewedIngredientId,\n    closeModal,\n    closeByBackdropClick,\n  } = useNutritionFactsModal()\n\n  if (!previewedIngredientId) return null\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onBackdropClick={closeByBackdropClick}\n    >\n      <NutritionFacts ingredientId={previewedIngredientId}/>\n    </Modal>\n  )\n}\n","import {\n  useEffect,\n  useState,\n  useCallback,\n  MouseEvent,\n} from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'store/store'\nimport { selectPreviewedIngredientId } from 'store/ingredients/ingredients.selectors'\nimport { clearPreviewedIngredientId } from 'store/ingredients/ingredients.slice'\n\nexport const useNutritionFactsModal = () => {\n  const dispatch = useAppDispatch()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const previewedIngredientId = useSelector(selectPreviewedIngredientId)\n\n  const openModal = useCallback(() => {\n    setIsModalOpen(true)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    dispatch(clearPreviewedIngredientId())\n    setIsModalOpen(false)\n  }, [dispatch])\n\n  const closeByBackdropClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) closeModal()\n  }\n\n  const closeByEsc = useCallback((e: Event) => {\n    if (e instanceof KeyboardEvent && e.code === 'Escape') closeModal()\n  }, [closeModal])\n\n  useEffect(() => {\n    if (previewedIngredientId) openModal()\n  }, [previewedIngredientId, openModal])\n\n  useEffect(() => {\n    if (isModalOpen) document.addEventListener('keydown', closeByEsc)\n\n    return () => document.removeEventListener('keydown', closeByEsc)\n  }, [closeByEsc, isModalOpen])\n\n  return {\n    isModalOpen,\n    previewedIngredientId,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n  }\n}\n","export const IngredientGroups = [\n  {\n    type: 'bun',\n    label: 'Buns',\n  },\n  {\n    type: 'burger',\n    label: 'Burgers',\n  },\n  {\n    type: 'topping',\n    label: 'Toppings',\n  },\n]\n","import { useState, createRef, useRef } from 'react'\nimport { IngredientGroups } from 'shared/constants/ingredientGroups'\nimport { IIngredientGroup, IngredientGroupRef } from 'shared/types'\n\nfunction useIngredientsScroll() {\n  const [currentTab, setCurrentTab] = useState<string>(IngredientGroups[0].type)\n  const ingredientsRef = useRef<HTMLUListElement>(null)\n  const ingredientGroupRefs: Record<string, IngredientGroupRef> = {}\n\n  IngredientGroups.forEach((group: IIngredientGroup) =>\n    ingredientGroupRefs[group.type] = createRef<HTMLHeadingElement>()\n  )\n\n  const scrollToRef = (ref: IngredientGroupRef) => {\n    if (ref.current) ref.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  const handleTabClick = (ingredientGroupType: string) => {\n    const selectedGroup = IngredientGroups.find(group => group.type === ingredientGroupType)\n\n    if (selectedGroup) {\n      const { type } = selectedGroup\n      scrollToRef(ingredientGroupRefs[type])\n    }\n\t}\n\n  const handleIngredientsScroll = () => {\n    const lineY = ingredientsRef.current?.getBoundingClientRect().y\n\n    // Calculate offsets for each ingredient group dynamically\n    const offsets = IngredientGroups.map(group =>\n      Math.abs(ingredientGroupRefs[group.type]!.current!.getBoundingClientRect().y - (lineY as number))\n    )\n\n    // Find the minimum offset and set the corresponding tab as current\n    const minOffsetIndex = offsets.indexOf(Math.min(...offsets))\n    setCurrentTab(IngredientGroups[minOffsetIndex].type)\n  }\n\n  return {\n    currentTab,\n    handleTabClick,\n    handleIngredientsScroll,\n    ingredientsRef,\n    ingredientGroupRefs,\n  }\n}\n\nexport default useIngredientsScroll\n","// extracted by mini-css-extract-plugin\nexport default {\"tabBar\":\"BurgerIngredients_tabBar__jn4fI\",\"menu\":\"BurgerIngredients_menu__X3WWl\"};","import { Tab } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/tab'\nimport { IngredientGroup } from 'components/IngredientGroup'\nimport { NutritionFactsModal } from 'components/NutritionFactsModal'\nimport useIngredientsScroll from './hooks/useIngredientsScroll'\nimport { IngredientGroups } from 'shared/constants/ingredientGroups'\nimport styles from './BurgerIngredients.module.css'\n\nexport const BurgerIngredients = () => {\n  const {\n    currentTab,\n    handleTabClick,\n    handleIngredientsScroll,\n    ingredientsRef,\n    ingredientGroupRefs,\n  } = useIngredientsScroll()\n\n  return (\n    <>\n      <section className='mt-10'>\n        <h1 className='text text_type_main-large'>Build Your Own Burger</h1>\n        <ul className={`${styles.tabBar} mt-5`}>\n          {IngredientGroups.map(group => (\n            <li key={group.type}>\n              <Tab\n                active={currentTab === group.type}\n                value={group.type}\n                onClick={handleTabClick}\n              >\n                {group.label}\n              </Tab>\n            </li>\n          ))}\n        </ul>\n        <ul\n          className={`${styles.menu} custom-scroll`}\n          ref={ingredientsRef}\n          onScroll={handleIngredientsScroll}\n        >\n          {IngredientGroups.map(group => (\n            <IngredientGroup\n              key={group.type}\n              type={group.type}\n              label={group.label}\n              ref={ingredientGroupRefs[group.type]}\n            />\n          ))}\n        </ul>\n      </section>\n      <NutritionFactsModal/>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BunElement_root__P2lJ4\"};","import { useSelector } from 'react-redux'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { selectBun } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport styles from './BunElement.module.css'\n\ninterface IBunElementProps {\n  type: 'top' | 'bottom';\n}\n\nexport const BunElement = ({ type }: IBunElementProps) => {\n  const bun = useSelector(selectBun)\n\n  return (\n    <div className={`${styles.root} ml-8 pr-4`}>\n      <ConstructorElement\n        type={type}\n        text={bun ? `${bun.name} ${type === 'top' ? '(top)' : '(bottom)'}` : 'Choose your bun'}\n        price={bun ? bun.price : 0}\n        thumbnail={bun ? bun.image : 'https://stellarburgers.nomoreparties.site/static/media/loading.89540200.svg'}\n        isLocked\n      />\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FillingListItem_root__Kz4P+\",\"isHovered\":\"FillingListItem_isHovered__6iFKh\"};","import { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { DragIcon } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons'\nimport { useAppDispatch } from 'store/store'\nimport { moveFilling, removeFilling } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { IIngredient } from 'shared/types'\nimport styles from './FillingListItem.module.css'\n\ninterface IFillingListItemProps {\n  index: number;\n  ingredient: IIngredient;\n}\n\ninterface IDraggedItem {\n  index: number;\n}\n\nexport const FillingListItem = ({ index, ingredient }: IFillingListItemProps) => {\n  const dispatch = useAppDispatch()\n  const { name, price, image } = ingredient\n\n  const [, dragRef] = useDrag({\n    type: 'addedIngredient',\n    item: () => {\n      return { index }\n    },\n  })\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'addedIngredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver(),\n    }),\n    drop: (item: IDraggedItem) => {\n      if (item.index === index) return\n\n      dispatch(moveFilling({ fromIndex: item.index, toIndex: index }))\n    },\n  })\n\n  const handleRemoveFilling = () => dispatch(removeFilling(index))\n\n\n  const ref = useRef<HTMLLIElement>(null)\n  dragRef(dropRef(ref))\n\n  return (\n    <li\n      ref={ref}\n      className={`${styles.root} ${isHovered ? `${styles.isHovered}` : ''} mt-4 mb-4`}\n    >\n      <DragIcon type=\"primary\"/>\n      <ConstructorElement\n        text={name}\n        thumbnail={image}\n        price={price}\n        handleClose={handleRemoveFilling}\n      />\n    </li>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FillingList_root__CWjeS\"};","import { useSelector } from 'react-redux'\nimport { FillingListItem } from './Item'\nimport { selectFillings } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { IIngredient } from 'shared/types'\nimport styles from './FillingList.module.css'\n\nexport const FillingList = () => {\n  const fillings = useSelector(selectFillings)\n\n  return (\n    <ul className={`${styles.root} custom-scroll`}>\n      {fillings.map((ingredient: IIngredient, i) => (\n        <FillingListItem\n          // TODO: When using _id as a key\n          // 'Encountered two children with the same key'\n          key={ingredient._id}\n          // TODO: check if id can be used here\n          index={i}\n          ingredient={ingredient}\n        />\n      ))}\n    </ul>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OrderConfirmation_root__Y5Pjh\",\"orderNumber\":\"OrderConfirmation_orderNumber__F7HYV\"};","import successImage from 'images/success.png'\nimport styles from './OrderConfirmation.module.css'\n\ninterface IOrderConfirmationProps {\n  orderNumber: number;\n}\n\nexport const OrderConfirmation = ({ orderNumber }: IOrderConfirmationProps) => (\n  <div className={styles.root}>\n    <span className='mb-8 text text_type_main-medium'>Your order number is</span>\n    <h2 className={`${styles.orderNumber} text text_type_digits-large`}>{orderNumber}</h2>\n    <img className='mt-15 mb-15' src={successImage} alt='Success icon'/>\n    <p className='mb-2 text text_type_main-default'>your order is being prepared</p>\n    <p className='text text_type_main-default text_color_inactive'>be ready to pick it up at the orbital station</p>\n  </div>\n)\n","import { IRootState } from '../store'\n\nexport const selectOrderState = (state: IRootState) => state.order\n\nexport const selectOrderNumber = (state: IRootState) => state.order.number\n","import {\n  useEffect,\n  useState,\n  useCallback,\n  MouseEvent,\n} from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'store/store'\nimport { selectOrderNumber } from 'store/order/order.selectors'\nimport { clearIngredients } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { clearOrderNumber } from 'store/order/order.slice'\n\nexport const useOrderConfirmationModal = () => {\n  const dispatch = useAppDispatch()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const orderNumber = useSelector(selectOrderNumber)\n\n  const openModal = useCallback(() => {\n    setIsModalOpen(true)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    dispatch(clearOrderNumber())\n    dispatch(clearIngredients())\n    setIsModalOpen(false)\n  }, [dispatch])\n\n  const closeByBackdropClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) closeModal()\n  }\n\n  const closeByEsc = useCallback((e: Event) => {\n    if (e instanceof KeyboardEvent && e.code === 'Escape') closeModal()\n  }, [closeModal])\n\n  useEffect(() => {\n    if (orderNumber) openModal()\n  }, [orderNumber, openModal])\n\n  useEffect(() => {\n    if (isModalOpen) document.addEventListener('keydown', closeByEsc)\n\n    return () => document.removeEventListener('keydown', closeByEsc)\n  }, [closeByEsc, isModalOpen])\n\n  return {\n    isModalOpen,\n    orderNumber,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n  }\n}\n","import { Modal } from 'components/Modal'\nimport { OrderConfirmation } from './OrderConfirmation'\nimport { useOrderConfirmationModal } from './hooks/useOrderConfirmationModal'\n\nexport const OrderConfirmationModal = () => {\n  const {\n    isModalOpen,\n    closeModal,\n    closeByBackdropClick,\n    orderNumber,\n  } = useOrderConfirmationModal()\n\n  if (!orderNumber) return null\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onBackdropClick={closeByBackdropClick}\n    >\n      <OrderConfirmation orderNumber={orderNumber}/>\n    </Modal>\n  )\n}\n","import {\n  useEffect,\n  useState,\n  useCallback,\n  MouseEvent,\n} from 'react'\nimport { useAppDispatch } from 'store/store'\nimport { clearError } from 'store/order/order.slice'\n\nexport const useErrorModal = () => {\n  const dispatch = useAppDispatch()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const openModal = useCallback(() => {\n    setIsModalOpen(true)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    dispatch(clearError())\n    setIsModalOpen(false)\n  }, [dispatch])\n\n  const closeByBackdropClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) closeModal()\n  }\n\n  const closeByEsc = useCallback((e: Event) => {\n    if (e instanceof KeyboardEvent && e.code === 'Escape') closeModal()\n  }, [closeModal])\n\n  useEffect(() => {\n    if (isModalOpen) document.addEventListener('keydown', closeByEsc)\n\n    return () => document.removeEventListener('keydown', closeByEsc)\n  }, [closeByEsc, isModalOpen])\n\n  return {\n    isModalOpen,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ErrorModal_content__fCl0B\",\"errorSign\":\"ErrorModal_errorSign__vWha6\"};","import { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { Modal } from 'components/Modal'\nimport { ErrorMessage } from 'components/ErrorMessage'\nimport { useErrorModal } from './hooks/useErrorModal'\nimport styles from './ErrorModal.module.css'\n\ninterface IErrorModalProps {\n  isOpen: boolean;\n  errorText: string;\n}\n\nexport const ErrorModal = ({\n  isOpen,\n  errorText,\n}: IErrorModalProps) => {\n  const {\n    closeModal,\n    closeByBackdropClick,\n  } = useErrorModal()\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeModal}\n      onBackdropClick={closeByBackdropClick}\n    >\n      <div className={styles.content}>\n        <div className={styles.errorSign}>\n          <CloseIcon type='primary'/>\n        </div>\n        <ErrorMessage>{errorText}</ErrorMessage>\n      </div>\n    </Modal>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SubmitGroup_root__OQ4Lo\",\"button\":\"SubmitGroup_button__68UXa\"};","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { Button } from 'components/ui/Button'\nimport { Loader } from 'components/Loader'\nimport { OrderConfirmationModal } from './OrderConfirmationModal'\nimport { ErrorModal, useErrorModal } from 'components/ErrorModal'\nimport { useAppDispatch } from 'store/store'\nimport { selectBun, selectFillings } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { placeOrderRequest } from 'store/order/order.operations'\nimport { selectOrderState } from 'store/order/order.selectors'\nimport { IIngredient } from 'shared/types'\nimport styles from './SubmitGroup.module.css'\n\nexport const SubmitGroup = () => {\n  const dispatch = useAppDispatch()\n  const { isFetching, error } = useSelector(selectOrderState)\n  const bun = useSelector(selectBun)\n  const fillings = useSelector(selectFillings)\n  const {\n    isModalOpen,\n    openModal,\n  } = useErrorModal()\n\n  const bunsPrice = useMemo(() => bun ? bun.price * 2 : 0, [bun])\n  const fillingsPrice = useMemo(() => fillings.reduce((prev: number, filling: IIngredient) => prev + filling.price, 0), [fillings])\n  const totalPrice = bunsPrice + fillingsPrice\n\n  const handlePlaceOrderClick = () => {\n    if (bun && fillings.length) {\n      const ingredients = [bun, ...fillings, bun]\n        .map((ingredient: IIngredient) => ingredient._id)\n\n      dispatch(placeOrderRequest({ ingredients }))\n        .then(() => openModal())\n    }\n  }\n\n  return (\n    <>\n      <div className={`${styles.root} mt-10 pr-4 pl-4`}>\n        <span className='text text_type_digits-medium mr-10'>\n          {totalPrice}\n          {' '}\n          <CurrencyIcon type='primary' />\n        </span>\n        <div className={styles.button}>\n          <Button\n            type='button'\n            view='primary'\n            size='large'\n            onClick={handlePlaceOrderClick}\n            disabled={!bun || !fillings.length}\n          >\n            Place an order\n          </Button>\n          {isFetching && <Loader/>}\n        </div>\n        <OrderConfirmationModal/>\n        {error &&\n          <ErrorModal\n            isOpen={isModalOpen}\n            errorText={error}\n          />\n        }\n      </div>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerConstructor_root__fVIgZ\",\"isHovered\":\"BurgerConstructor_isHovered__i8Ijv\"};","import { useDrop } from 'react-dnd'\nimport { BunElement } from './BunElement'\nimport { FillingList } from './FillingList'\nimport { SubmitGroup } from './SubmitGroup'\nimport { useAppDispatch } from 'store/store'\nimport { addBun, addFilling } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { IIngredient } from 'shared/types'\nimport styles from './BurgerConstructor.module.css'\n\nexport const BurgerConstructor = () => {\n  const dispatch = useAppDispatch()\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'ingredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver()\n    }),\n    drop: (item: IIngredient) => {\n      handleDrop(item)\n    },\n  })\n\n  const handleDrop = (ingredient: IIngredient) => {\n    if (ingredient.type === 'bun') {\n      dispatch(addBun(ingredient))\n    } else {\n      dispatch(addFilling(ingredient))\n    }\n  }\n\n  return (\n    <section className={`${styles.root} pt-25 pb-10`}>\n      <div ref={dropRef} className={isHovered ? `${styles.isHovered}` : ''}>\n        <BunElement type='top'/>\n        <FillingList/>\n        <BunElement type='bottom'/>\n      </div>\n      <SubmitGroup/>\n    </section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerBuilder_root__M-A1J\"};","import { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { BurgerIngredients } from 'components/BurgerIngredients'\nimport { BurgerConstructor } from 'components/BurgerConstructor'\nimport styles from './BurgerBuilder.module.css'\n\nconst BurgerBuilder = () => (\n  <div className={styles.root}>\n    <DndProvider backend={HTML5Backend}>\n      <BurgerIngredients/>\n      <BurgerConstructor/>\n    </DndProvider>\n  </div>\n)\n\nexport default BurgerBuilder\n"],"names":["ErrorMessage","_ref","children","_jsx","className","concat","styles","selectFillings","createSelector","state","burgerConstructor","fillings","entities","Object","values","selectBun","bun","selectIngredientCount","_","id","ingredients","reduce","count","ingredient","_id","type","Ingredient","dispatch","useAppDispatch","useSelector","selectIngredientById","name","image","price","beingDragged","dragRef","useDrag","item","collect","monitor","isDragging","_Fragment","_jsxs","ref","onClick","setPreviewedIngredientId","handleIngredientClick","src","alt","CurrencyIcon","Counter","size","IngredientList","ingredientIds","map","ingredientId","IngredientGroup","forwardRef","label","isFetching","selectIsFetching","selectIngredientIdsByType","Loader","Modal","isOpen","onClose","onBackdropClick","createPortal","CloseIcon","document","querySelector","NutritionFacts","calories","carbohydrates","fat","proteins","image_large","descriptionTermClasses","descriptionDetailsClasses","NutritionFactsModal","isModalOpen","previewedIngredientId","closeModal","closeByBackdropClick","useNutritionFactsModal","setIsModalOpen","useState","selectPreviewedIngredientId","openModal","useCallback","clearPreviewedIngredientId","closeByEsc","e","KeyboardEvent","code","useEffect","addEventListener","removeEventListener","target","currentTarget","IngredientGroups","currentTab","setCurrentTab","ingredientsRef","useRef","ingredientGroupRefs","forEach","group","createRef","handleTabClick","ingredientGroupType","selectedGroup","find","current","scrollIntoView","behavior","handleIngredientsScroll","_ingredientsRef$curre","lineY","getBoundingClientRect","y","offsets","Math","abs","minOffsetIndex","indexOf","min","BurgerIngredients","useIngredientsScroll","Tab","active","value","onScroll","BunElement","ConstructorElement","text","thumbnail","isLocked","FillingListItem","index","isHovered","dropRef","useDrop","accept","isOver","drop","moveFilling","fromIndex","toIndex","DragIcon","handleClose","handleRemoveFilling","removeFilling","FillingList","i","OrderConfirmation","orderNumber","successImage","selectOrderState","order","selectOrderNumber","number","OrderConfirmationModal","useOrderConfirmationModal","clearOrderNumber","clearIngredients","useErrorModal","clearError","ErrorModal","errorText","SubmitGroup","error","totalPrice","useMemo","prev","filling","Button","view","handlePlaceOrderClick","length","placeOrderRequest","then","disabled","BurgerConstructor","handleDrop","addBun","addFilling","BurgerBuilder","DndProvider","backend","HTML5Backend"],"sourceRoot":""}