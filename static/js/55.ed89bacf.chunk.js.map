{"version":3,"file":"static/js/55.ed89bacf.chunk.js","mappings":"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","sources":["components/AuthLink/AuthLink.tsx","webpack://stellar-burgers/./src/components/AuthPageLayout/AuthPageLayout.module.css?ad87","components/AuthPageLayout/AuthPageLayout.tsx","webpack://stellar-burgers/./src/components/AuthPageLayout/Links/AuthPageLayoutLinks.module.css?111a","components/AuthPageLayout/index.ts","components/AuthPageLayout/Links/AuthPageLayoutLinks.tsx","components/AuthPageTitle/AuthPageTitle.tsx","webpack://stellar-burgers/./src/components/ui/Link/Link.module.css?e72f","components/ui/Link/Link.tsx","pages/ResetPassword/ResetPassword.tsx"],"sourcesContent":["import { Link } from '../ui/Link'\n\ninterface IAuthLinkProps {\n  leadInText: string;\n  linkText: string;\n  href: string;\n}\n\nexport const AuthLink = (props: IAuthLinkProps) => {\n  const { leadInText, linkText, href } = props\n\n  return (\n    <p className={'text text_type_main-default text_color_inactive'}>{leadInText}\n    {' '}<Link href={href}>{linkText}</Link>\n  </p>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AuthPageLayout_root__Cw3I6\"};","import { ReactNode } from 'react'\nimport styles from './AuthPageLayout.module.css'\n\ninterface IAuthPageLayoutProps {\n  children: ReactNode;\n}\n\nexport const AuthPageLayout = (props: IAuthPageLayoutProps) => {\n  const { children } = props\n\n  return (\n    <div className={styles.root}>\n      {children}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AuthPageLayoutLinks_root__BOXWr\"};","import { AuthPageLayout as Component } from './AuthPageLayout'\nimport { AuthPageLayoutLinks } from './Links'\n\nexport const AuthPageLayout = Object.assign(Component, {\n  Links: AuthPageLayoutLinks,\n})\n","import { ReactNode } from 'react'\nimport styles from './AuthPageLayoutLinks.module.css'\n\ninterface IAuthPageLayoutLinksProps {\n  children: ReactNode;\n}\n\nexport const AuthPageLayoutLinks = (props: IAuthPageLayoutLinksProps) => {\n  const { children } = props\n\n  return (\n    <div className={styles.root}>\n      {children}\n    </div>\n  )\n}\n","interface IAuthPageTitleProps {\n  title: string;\n}\n\nexport const AuthPageTitle = (props: IAuthPageTitleProps) => {\n  const { title } = props\n\n  return (\n    <h2 className='text text_type_main-medium mb-6'>{title}</h2>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Link_root__J3MWw\",\"primary\":\"Link_primary__1ZGMO\",\"secondary\":\"Link_secondary__nJWez\",\"large\":\"Link_large__nmRg4\",\"medium\":\"Link_medium__znemi\",\"small\":\"Link_small__dqpgm\"};","import type { AnchorHTMLAttributes } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styles from './Link.module.css'\n\ninterface ILinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  href: string,\n  isOutsideLink?: boolean;\n  view?: 'primary' | 'secondary';\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const Link = (props: ILinkProps) => {\n  const {\n    children,\n    href,\n    isOutsideLink = false,\n    view = 'primary',\n    size,\n  } = props\n\n  const classes = `${styles.root} ${styles[view]} ${size ? styles[size] : ''}`\n\n  return (\n    !isOutsideLink ? (\n      <RouterLink\n        className={classes}\n        to={href}\n      >\n        {children}\n      </RouterLink>\n    ) : (\n      <a\n        className={classes}\n        href={href}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {children}\n      </a>\n    )\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { AuthPageLayout } from '../../components/AuthPageLayout'\nimport { AuthPageTitle } from '../../components/AuthPageTitle'\nimport { Form } from '../../components/Form'\nimport { Button } from '../../components/ui/Button'\nimport { AuthLink } from '../../components/AuthLink'\nimport { useAppDispatch } from '../../store/store'\nimport { selectAuthState } from '../../store/auth/auth.selectors'\nimport { passwordResetRequest } from '../../store/auth/auth.operations'\nimport useFormWithValidation from '../../hooks/useFormWithValidation'\nimport { CustomValidationMessages } from '../../shared/constants/customValidationMessages'\n\nconst initialFormValues = {\n  password: '',\n  token: '',\n}\n\nconst ResetPassword = () => {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n  const {\n    values,\n    errors,\n    isValid,\n    handleChange,\n  } = useFormWithValidation(initialFormValues)\n\n  const { isFetching, error, isResettingPassword } = useSelector(selectAuthState)\n\n  const [isPasswordHidden, setIsPasswordHidden] = useState(true)\n\n  useEffect(() => {\n    if (!isFetching && !isResettingPassword) navigate('/login')\n  }, [isFetching, isResettingPassword, navigate])\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    dispatch(passwordResetRequest({\n      password: values.password,\n      token: values.token,\n    }))\n  }\n\n  return (\n    <AuthPageLayout>\n      <AuthPageTitle title='Create a new password'/>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          value={values.password}\n          name='password'\n          type={isPasswordHidden ? 'password' : 'text'}\n          placeholder='Password'\n          error={!!errors.password}\n          errorText={CustomValidationMessages.PASSWORD_ERROR}\n          icon={isPasswordHidden ? 'ShowIcon' : 'HideIcon'}\n          onIconClick={() => setIsPasswordHidden(!isPasswordHidden)}\n          onChange={handleChange}\n          minLength={8}\n          required\n        />\n        <Input\n          value={values.token}\n          name='token'\n          type='text'\n          placeholder='Enter verification code'\n          error={!!errors.token}\n          errorText={CustomValidationMessages.CODE_ERROR}\n          onChange={handleChange}\n          required\n        />\n        <Form.SubmitButton isFetching={isFetching}>\n          <Button\n            type='submit'\n            view='primary'\n            size='medium'\n            disabled={!isValid}\n          >\n            Save new password\n          </Button>\n        </Form.SubmitButton>\n        <Form.Error>\n          {error}\n        </Form.Error>\n      </Form>\n      <AuthPageLayout.Links>\n        <AuthLink\n          leadInText='Remembered the password?'\n          linkText='Log in here'\n          href='/login'\n        />\n      </AuthPageLayout.Links>\n    </AuthPageLayout>\n  )\n}\n\nexport default ResetPassword\n"],"names":["AuthLink","props","leadInText","linkText","href","_jsxs","className","children","_jsx","Link","AuthPageLayout","Object","assign","styles","Links","AuthPageTitle","title","isOutsideLink","view","size","classes","concat","root","rel","target","RouterLink","to","initialFormValues","password","token","ResetPassword","dispatch","useAppDispatch","navigate","useNavigate","values","errors","isValid","handleChange","useFormWithValidation","isFetching","error","isResettingPassword","useSelector","selectAuthState","isPasswordHidden","setIsPasswordHidden","useState","useEffect","Form","onSubmit","e","preventDefault","passwordResetRequest","Input","value","name","type","placeholder","errorText","CustomValidationMessages","PASSWORD_ERROR","icon","onIconClick","onChange","minLength","required","CODE_ERROR","SubmitButton","Button","disabled","Error"],"sourceRoot":""}