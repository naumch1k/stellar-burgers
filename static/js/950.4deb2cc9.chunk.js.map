{"version":3,"file":"static/js/950.4deb2cc9.chunk.js","mappings":"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","sources":["webpack://stellar-burgers/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.tsx","hooks/useIngredientCount.ts","store/burgerConstructor/burgerConstructor.selectors.ts","webpack://stellar-burgers/./src/components/Ingredient/Ingredient.module.css?c283","components/Ingredient/Ingredient.tsx","webpack://stellar-burgers/./src/components/IngredientList/IngredientList.module.css?3cb3","components/IngredientList/IngredientList.tsx","components/IngredientGroup/IngredientGroup.tsx","webpack://stellar-burgers/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.tsx","webpack://stellar-burgers/./src/components/NutritionFacts/NutritionFacts.module.css?58df","components/NutritionFacts/NutritionFacts.tsx","components/NutritionFactsModal/NutritionFactsModal.tsx","components/NutritionFactsModal/hooks/useNutritionFactsModal.ts","shared/constants/ingredientGroups.ts","components/BurgerIngredients/hooks/useIngredientsScroll.ts","webpack://stellar-burgers/./src/components/BurgerIngredients/BurgerIngredients.module.css?02b9","components/BurgerIngredients/BurgerIngredients.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BunElement/BunElement.module.css?ca38","components/BurgerConstructor/BunElement/BunElement.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/FillingList/Item/FillingListItem.module.css?4d1a","components/BurgerConstructor/FillingList/Item/FillingListItem.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/FillingList/FillingList.module.css?9967","components/BurgerConstructor/FillingList/FillingList.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/OrderConfirmation/OrderConfirmation.module.css?f855","components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/OrderConfirmation/OrderConfirmation.tsx","store/order/order.selectors.ts","components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/hooks/useOrderConfirmationModal.ts","components/BurgerConstructor/SubmitGroup/OrderConfirmationModal/OrderConfirmationModal.tsx","components/ErrorModal/hooks/useErrorModal.ts","webpack://stellar-burgers/./src/components/ErrorModal/ErrorModal.module.css?c843","components/ErrorModal/ErrorModal.tsx","components/BurgerConstructor/SubmitGroup/hooks/useOrderPriceCalculator.ts","webpack://stellar-burgers/./src/components/BurgerConstructor/SubmitGroup/SubmitGroup.module.css?f29d","components/BurgerConstructor/SubmitGroup/SubmitGroup.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BurgerConstructor.module.css?285f","components/BurgerConstructor/BurgerConstructor.tsx","webpack://stellar-burgers/./src/pages/BurgerBuilder/BurgerBuilder.module.css?917a","pages/BurgerBuilder/BurgerBuilder.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ErrorMessage_root__kSKWw\"};","import { ReactNode } from 'react'\nimport styles from './ErrorMessage.module.css'\n\ninterface IErrorMessageProps {\n  children: ReactNode;\n}\n\nexport const ErrorMessage = ({ children }: IErrorMessageProps) => (\n  <p className={`${styles.root} text text_type_main-large`}>\n    {children}\n  </p>\n)\n","import { IIngredient } from 'shared/types'\n\nfunction useIngredientCount({\n  ingredients,\n  ingredientId,\n}: {\n  ingredients:(IIngredient | undefined)[];\n  ingredientId: string;\n}) {\n  const ingredientCount = ingredients.reduce((count, ingredient) => {\n    if (ingredient?._id === ingredientId) return count + 1\n    return count\n  }, 0)\n\n  return ingredientCount\n}\n\nexport default useIngredientCount\n","import { createSelector } from '@reduxjs/toolkit'\nimport type { IRootState } from '../store'\n\nconst selectFillingEntities = (state: IRootState) => state.burgerConstructor.fillings\n\nexport const selectFillings = createSelector(\n  selectFillingEntities,\n  entities => Object.values(entities)\n)\n\nexport const selectBun = (state: IRootState) => state.burgerConstructor.bun\n\nexport const selectAllIngredients = createSelector(\n  selectBun,\n  selectFillings,\n  (bun, fillings) => [bun, ...fillings]\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ingredient_root__Zh74E\",\"beingDragged\":\"Ingredient_beingDragged__pJKPQ\",\"name\":\"Ingredient_name__bUorL\",\"price\":\"Ingredient_price__CIEQs\"};","import { useSelector } from 'react-redux'\nimport { useDrag } from 'react-dnd'\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { IRootState, useAppDispatch } from 'store/store'\nimport { selectIngredientById } from 'store/ingredients/ingredients.selectors'\nimport { selectAllIngredients } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { setPreviewedIngredientId } from 'store/ingredients/ingredients.slice'\nimport useIngredientCount from 'hooks/useIngredientCount'\nimport styles from './Ingredient.module.css'\n\ninterface IIngredientProps {\n  id: string;\n}\n\nexport const Ingredient = ({ id }: IIngredientProps) => {\n  const dispatch = useAppDispatch()\n  const ingredients = useSelector(selectAllIngredients)\n  const ingredient = useSelector((state: IRootState) => selectIngredientById(state, id))\n  const { name, image, price } = ingredient!\n  const ingredientCount = useIngredientCount({\n    ingredients,\n    ingredientId: id,\n  })\n\n  const [{ beingDragged }, dragRef] = useDrag({\n    type: 'ingredient',\n    item: ingredient,\n    collect: monitor => ({\n      beingDragged: monitor.isDragging(),\n    }),\n  })\n\n  const handleIngredientClick = (id: string) => dispatch(setPreviewedIngredientId(id))\n\n  return (\n    <>\n      <li\n        ref={dragRef}\n        className={`${styles.root} ${beingDragged ? `${styles.beingDragged}` : ''}`}\n        onClick={() => handleIngredientClick(id)}\n      >\n        <img className='mr-4 ml-4' src={image} alt={name}/>\n        <div className='pt-2'>\n          <p className={`${styles.price} text text_type_digits-default`}>\n            <span className='mr-2'>{price}</span>\n            <CurrencyIcon type='primary'/>\n          </p>\n          <p className={`${styles.name} text text_type_main-default mt-2`}>{name}</p>\n        </div>\n        {ingredientCount > 0 && <Counter count={ingredientCount} size='default'/>}\n      </li>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"IngredientList_root__1m0nr\"};","import { Ingredient } from 'components/Ingredient'\nimport styles from './IngredientList.module.css'\n\ninterface IngredientListProps {\n  ingredientIds: string[];\n}\n\nexport const IngredientList = ({ ingredientIds }: IngredientListProps) => (\n  <ul className={`${styles.root} pr-4 pb-10 pl-4`}>\n    {ingredientIds.map(ingredientId => (\n      <Ingredient\n        key={ingredientId}\n        id={ingredientId}\n      />\n    ))}\n  </ul>\n)\n","import { forwardRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Loader } from 'components/Loader'\nimport { IngredientList } from 'components/IngredientList'\nimport {\n  selectIsFetching,\n  selectIngredientIdsByType,\n} from 'store/ingredients/ingredients.selectors'\nimport { IRootState } from 'store/store'\nimport { IIngredientGroup } from 'shared/types'\n\nexport const IngredientGroup = forwardRef<HTMLHeadingElement, IIngredientGroup>(\n  ({ type, label }, ref) => {\n\n  const isFetching = useSelector(selectIsFetching)\n  const ingredientIds = useSelector((state: IRootState) => selectIngredientIdsByType(state, type))\n\n  if (isFetching) return <Loader/>\n\n  return (\n    <li>\n      <h2 ref={ref} className='text text_type_main-medium mb-6'>{label}</h2>\n      <IngredientList ingredientIds={ingredientIds}/>\n    </li>\n  )\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Modal_root__z7+I3\",\"isOpen\":\"Modal_isOpen__zYv3o\",\"container\":\"Modal_container__Ha+Ky\",\"closeButton\":\"Modal_closeButton__Ya+Ev\"};","import { MouseEvent, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport styles from './Modal.module.css'\n\ninterface IModalProps {\n  isOpen: boolean;\n  onClose: () => void | undefined;\n  onBackdropClick:(e: MouseEvent) => void;\n  children: ReactNode;\n}\n\nexport const Modal = ({\n  isOpen,\n  onClose,\n  onBackdropClick,\n  children,\n}: IModalProps) => {\n  return createPortal(\n    <div\n      className={`${styles.root} ${isOpen ? `${styles.isOpen}` : ''}`}\n      onClick={onBackdropClick}\n    >\n      <div className={`${styles.container} pt-25 pr-10 pb-25 pl-10`}>\n        {children}\n        <button\n          className={styles.closeButton}\n          type='button'\n          aria-label='Close modal'\n          onClick={onClose}\n        >\n          <CloseIcon type='primary'/>\n        </button>\n      </div>\n    </div>,\n    document.querySelector('.portal')!\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NutritionFacts_root__RjsFs\",\"image\":\"NutritionFacts_image__p-fix\",\"list\":\"NutritionFacts_list__on7pF\",\"listItem\":\"NutritionFacts_listItem__ffIlj\"};","import { useSelector } from 'react-redux'\nimport { IRootState } from 'store/store'\nimport { selectIngredientById } from 'store/ingredients/ingredients.selectors'\nimport styles from './NutritionFacts.module.css'\n\ninterface INutritionFactsProps {\n  ingredientId: string;\n}\n\nexport const NutritionFacts = ({ ingredientId }: INutritionFactsProps) => {\n  const ingredient = useSelector((state: IRootState) => selectIngredientById(state, ingredientId))\n  const {\n    name,\n    calories,\n    carbohydrates,\n    fat,\n    proteins,\n    image_large,\n  } = ingredient!\n\n  const descriptionTermClasses = 'mb-2 text text_type_main-default text_color_inactive'\n  const descriptionDetailsClasses = 'mb-2 text text_type_digits-default text_color_inactive'\n\n  return (\n    <div className={styles.root}>\n      <h2 className='text text_type_main-large'>Nutrition Facts</h2>\n      <img className={`${styles.image} mt-4`} src={image_large} alt={name}/>\n      <p className='mt-4 text text_type_main-medium'>{name}</p>\n      <dl className={styles.list}>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Calories</dt>\n          <dd className={descriptionDetailsClasses}>{calories}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Carb.</dt>\n          <dd className={descriptionDetailsClasses}>{carbohydrates}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Fat</dt>\n          <dd className={descriptionDetailsClasses}>{fat}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Protein</dt>\n          <dd className={descriptionDetailsClasses}>{proteins}</dd>\n        </div>\n      </dl>\n    </div>\n  )\n}\n","import { Modal } from 'components/Modal'\nimport { NutritionFacts } from 'components/NutritionFacts'\nimport { useNutritionFactsModal } from './hooks/useNutritionFactsModal'\n\nexport const NutritionFactsModal = () => {\n  const {\n    isModalOpen,\n    previewedIngredientId,\n    closeModal,\n    closeByBackdropClick,\n  } = useNutritionFactsModal()\n\n  if (!previewedIngredientId) return null\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onBackdropClick={closeByBackdropClick}\n    >\n      <NutritionFacts ingredientId={previewedIngredientId}/>\n    </Modal>\n  )\n}\n","import {\n  useEffect,\n  useState,\n  useCallback,\n  MouseEvent,\n} from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'store/store'\nimport { selectPreviewedIngredientId } from 'store/ingredients/ingredients.selectors'\nimport { clearPreviewedIngredientId } from 'store/ingredients/ingredients.slice'\n\nexport const useNutritionFactsModal = () => {\n  const dispatch = useAppDispatch()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const previewedIngredientId = useSelector(selectPreviewedIngredientId)\n\n  const openModal = useCallback(() => {\n    setIsModalOpen(true)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    dispatch(clearPreviewedIngredientId())\n    setIsModalOpen(false)\n  }, [dispatch])\n\n  const closeByBackdropClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) closeModal()\n  }\n\n  const closeByEsc = useCallback((e: Event) => {\n    if (e instanceof KeyboardEvent && e.code === 'Escape') closeModal()\n  }, [closeModal])\n\n  useEffect(() => {\n    if (previewedIngredientId) openModal()\n  }, [previewedIngredientId, openModal])\n\n  useEffect(() => {\n    if (isModalOpen) document.addEventListener('keydown', closeByEsc)\n\n    return () => document.removeEventListener('keydown', closeByEsc)\n  }, [closeByEsc, isModalOpen])\n\n  return {\n    isModalOpen,\n    previewedIngredientId,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n  }\n}\n","export const IngredientGroups = [\n  {\n    type: 'bun',\n    label: 'Buns',\n  },\n  {\n    type: 'burger',\n    label: 'Burgers',\n  },\n  {\n    type: 'topping',\n    label: 'Toppings',\n  },\n]\n","import { useState, createRef, useRef } from 'react'\nimport { IngredientGroups } from 'shared/constants/ingredientGroups'\nimport { IIngredientGroup, IngredientGroupRef } from 'shared/types'\n\nfunction useIngredientsScroll() {\n  const [currentTab, setCurrentTab] = useState<string>(IngredientGroups[0].type)\n  const ingredientsRef = useRef<HTMLUListElement>(null)\n  const ingredientGroupRefs: Record<string, IngredientGroupRef> = {}\n\n  IngredientGroups.forEach((group: IIngredientGroup) =>\n    ingredientGroupRefs[group.type] = createRef<HTMLHeadingElement>()\n  )\n\n  const scrollToRef = (ref: IngredientGroupRef) => {\n    if (ref.current) ref.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  const handleTabClick = (ingredientGroupType: string) => {\n    const selectedGroup = IngredientGroups.find(group => group.type === ingredientGroupType)\n\n    if (selectedGroup) {\n      const { type } = selectedGroup\n      scrollToRef(ingredientGroupRefs[type])\n    }\n\t}\n\n  const handleIngredientsScroll = () => {\n    const lineY = ingredientsRef.current?.getBoundingClientRect().y\n\n    // Calculate offsets for each ingredient group dynamically\n    const offsets = IngredientGroups.map(group =>\n      Math.abs(ingredientGroupRefs[group.type]!.current!.getBoundingClientRect().y - (lineY as number))\n    )\n\n    // Find the minimum offset and set the corresponding tab as current\n    const minOffsetIndex = offsets.indexOf(Math.min(...offsets))\n    setCurrentTab(IngredientGroups[minOffsetIndex].type)\n  }\n\n  return {\n    currentTab,\n    handleTabClick,\n    handleIngredientsScroll,\n    ingredientsRef,\n    ingredientGroupRefs,\n  }\n}\n\nexport default useIngredientsScroll\n","// extracted by mini-css-extract-plugin\nexport default {\"tabBar\":\"BurgerIngredients_tabBar__jn4fI\",\"menu\":\"BurgerIngredients_menu__X3WWl\"};","import { Tab } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/tab'\nimport { IngredientGroup } from 'components/IngredientGroup'\nimport { NutritionFactsModal } from 'components/NutritionFactsModal'\nimport useIngredientsScroll from './hooks/useIngredientsScroll'\nimport { IngredientGroups } from 'shared/constants/ingredientGroups'\nimport styles from './BurgerIngredients.module.css'\n\nexport const BurgerIngredients = () => {\n  const {\n    currentTab,\n    handleTabClick,\n    handleIngredientsScroll,\n    ingredientsRef,\n    ingredientGroupRefs,\n  } = useIngredientsScroll()\n\n  return (\n    <>\n      <section className='mt-10'>\n        <h1 className='text text_type_main-large'>Build Your Own Burger</h1>\n        <ul className={`${styles.tabBar} mt-5`}>\n          {IngredientGroups.map(({ type, label }) => (\n            <li key={type}>\n              <Tab\n                active={currentTab === type}\n                value={type}\n                onClick={handleTabClick}\n              >\n                {label}\n              </Tab>\n            </li>\n          ))}\n        </ul>\n        <ul\n          className={`${styles.menu} custom-scroll`}\n          ref={ingredientsRef}\n          onScroll={handleIngredientsScroll}\n        >\n          {IngredientGroups.map(({ type, label }) => (\n            <IngredientGroup\n              key={type}\n              type={type}\n              label={label}\n              ref={ingredientGroupRefs[type]}\n            />\n          ))}\n        </ul>\n      </section>\n      <NutritionFactsModal/>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BunElement_root__P2lJ4\"};","import { useSelector } from 'react-redux'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { selectBun } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport styles from './BunElement.module.css'\n\ninterface IBunElementProps {\n  type: 'top' | 'bottom';\n}\n\nexport const BunElement = ({ type }: IBunElementProps) => {\n  const bun = useSelector(selectBun)\n\n  return (\n    <div className={`${styles.root} ml-8 pr-4`}>\n      <ConstructorElement\n        type={type}\n        text={bun ? `${bun.name} ${type === 'top' ? '(top)' : '(bottom)'}` : 'Choose your bun'}\n        price={bun ? bun.price : 0}\n        thumbnail={bun ? bun.image : 'https://stellarburgers.nomoreparties.site/static/media/loading.89540200.svg'}\n        isLocked\n      />\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FillingListItem_root__Kz4P+\",\"isHovered\":\"FillingListItem_isHovered__6iFKh\"};","import { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { DragIcon } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons'\nimport { useAppDispatch } from 'store/store'\nimport { moveFilling, removeFilling } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { IIngredient } from 'shared/types'\nimport styles from './FillingListItem.module.css'\n\ninterface IFillingListItemProps {\n  index: number;\n  ingredient: IIngredient;\n}\n\ninterface IDraggedItem {\n  index: number;\n}\n\nexport const FillingListItem = ({ index, ingredient }: IFillingListItemProps) => {\n  const dispatch = useAppDispatch()\n  const { name, price, image } = ingredient\n\n  const [, dragRef] = useDrag({\n    type: 'addedIngredient',\n    item: () => {\n      return { index }\n    },\n  })\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'addedIngredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver(),\n    }),\n    drop: (item: IDraggedItem) => {\n      if (item.index === index) return\n\n      dispatch(moveFilling({ fromIndex: item.index, toIndex: index }))\n    },\n  })\n\n  const handleRemoveFilling = () => dispatch(removeFilling(index))\n\n\n  const ref = useRef<HTMLLIElement>(null)\n  dragRef(dropRef(ref))\n\n  return (\n    <li\n      ref={ref}\n      className={`${styles.root} ${isHovered ? `${styles.isHovered}` : ''} mt-4 mb-4`}\n    >\n      <DragIcon type=\"primary\"/>\n      <ConstructorElement\n        text={name}\n        thumbnail={image}\n        price={price}\n        handleClose={handleRemoveFilling}\n      />\n    </li>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FillingList_root__CWjeS\"};","import { useSelector } from 'react-redux'\nimport { FillingListItem } from './Item'\nimport { selectFillings } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { IIngredient } from 'shared/types'\nimport styles from './FillingList.module.css'\n\nexport const FillingList = () => {\n  const fillings = useSelector(selectFillings)\n\n  return (\n    <ul className={`${styles.root} custom-scroll`}>\n      {fillings.map((ingredient: IIngredient, i) => (\n        <FillingListItem\n          key={i}\n          index={i}\n          ingredient={ingredient}\n        />\n      ))}\n    </ul>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OrderConfirmation_root__Y5Pjh\",\"orderNumber\":\"OrderConfirmation_orderNumber__F7HYV\"};","import successImage from 'images/success.png'\nimport styles from './OrderConfirmation.module.css'\n\ninterface IOrderConfirmationProps {\n  orderNumber: number;\n}\n\nexport const OrderConfirmation = ({ orderNumber }: IOrderConfirmationProps) => (\n  <div className={styles.root}>\n    <span className='mb-8 text text_type_main-medium'>Your order number is</span>\n    <h2 className={`${styles.orderNumber} text text_type_digits-large`}>{orderNumber}</h2>\n    <img className='mt-15 mb-15' src={successImage} alt='Success icon'/>\n    <p className='mb-2 text text_type_main-default'>your order is being prepared</p>\n    <p className='text text_type_main-default text_color_inactive'>be ready to pick it up at the orbital station</p>\n  </div>\n)\n","import { IRootState } from '../store'\n\nexport const selectOrderState = (state: IRootState) => state.order\n\nexport const selectOrderNumber = (state: IRootState) => state.order.number\n","import {\n  useEffect,\n  useState,\n  useCallback,\n  MouseEvent,\n} from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'store/store'\nimport { selectOrderNumber } from 'store/order/order.selectors'\nimport { clearIngredients } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { clearOrderNumber } from 'store/order/order.slice'\n\nexport const useOrderConfirmationModal = () => {\n  const dispatch = useAppDispatch()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const orderNumber = useSelector(selectOrderNumber)\n\n  const openModal = useCallback(() => {\n    setIsModalOpen(true)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    dispatch(clearOrderNumber())\n    dispatch(clearIngredients())\n    setIsModalOpen(false)\n  }, [dispatch])\n\n  const closeByBackdropClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) closeModal()\n  }\n\n  const closeByEsc = useCallback((e: Event) => {\n    if (e instanceof KeyboardEvent && e.code === 'Escape') closeModal()\n  }, [closeModal])\n\n  useEffect(() => {\n    if (orderNumber) openModal()\n  }, [orderNumber, openModal])\n\n  useEffect(() => {\n    if (isModalOpen) document.addEventListener('keydown', closeByEsc)\n\n    return () => document.removeEventListener('keydown', closeByEsc)\n  }, [closeByEsc, isModalOpen])\n\n  return {\n    isModalOpen,\n    orderNumber,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n  }\n}\n","import { Modal } from 'components/Modal'\nimport { OrderConfirmation } from './OrderConfirmation'\nimport { useOrderConfirmationModal } from './hooks/useOrderConfirmationModal'\n\nexport const OrderConfirmationModal = () => {\n  const {\n    isModalOpen,\n    closeModal,\n    closeByBackdropClick,\n    orderNumber,\n  } = useOrderConfirmationModal()\n\n  if (!orderNumber) return null\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onBackdropClick={closeByBackdropClick}\n    >\n      <OrderConfirmation orderNumber={orderNumber}/>\n    </Modal>\n  )\n}\n","import {\n  useEffect,\n  useState,\n  useCallback,\n  MouseEvent,\n} from 'react'\nimport { useAppDispatch } from 'store/store'\nimport { clearError } from 'store/order/order.slice'\n\nexport const useErrorModal = () => {\n  const dispatch = useAppDispatch()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const openModal = useCallback(() => {\n    setIsModalOpen(true)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    dispatch(clearError())\n    setIsModalOpen(false)\n  }, [dispatch])\n\n  const closeByBackdropClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) closeModal()\n  }\n\n  const closeByEsc = useCallback((e: Event) => {\n    if (e instanceof KeyboardEvent && e.code === 'Escape') closeModal()\n  }, [closeModal])\n\n  useEffect(() => {\n    if (isModalOpen) document.addEventListener('keydown', closeByEsc)\n\n    return () => document.removeEventListener('keydown', closeByEsc)\n  }, [closeByEsc, isModalOpen])\n\n  return {\n    isModalOpen,\n    openModal,\n    closeModal,\n    closeByBackdropClick,\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ErrorModal_content__fCl0B\",\"errorSign\":\"ErrorModal_errorSign__vWha6\"};","import { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { Modal } from 'components/Modal'\nimport { ErrorMessage } from 'components/ErrorMessage'\nimport { useErrorModal } from './hooks/useErrorModal'\nimport styles from './ErrorModal.module.css'\n\ninterface IErrorModalProps {\n  isOpen: boolean;\n  errorText: string;\n}\n\nexport const ErrorModal = ({\n  isOpen,\n  errorText,\n}: IErrorModalProps) => {\n  const {\n    closeModal,\n    closeByBackdropClick,\n  } = useErrorModal()\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeModal}\n      onBackdropClick={closeByBackdropClick}\n    >\n      <div className={styles.content}>\n        <div className={styles.errorSign}>\n          <CloseIcon type='primary'/>\n        </div>\n        <ErrorMessage>{errorText}</ErrorMessage>\n      </div>\n    </Modal>\n  )\n}\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectBun, selectFillings } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { IIngredient } from 'shared/types'\n\nfunction useOrderPriceCalculator() {\n  const bun = useSelector(selectBun)\n  const fillings = useSelector(selectFillings)\n\n  const bunsPrice = useMemo(() => bun ? bun.price : 0, [bun])\n  const fillingsPrice = useMemo(() => fillings.reduce((prev: number, filling: IIngredient) => prev + filling.price, 0), [fillings])\n  const orderPrice = bunsPrice + fillingsPrice\n\n  return orderPrice\n}\n\nexport default useOrderPriceCalculator\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SubmitGroup_root__OQ4Lo\",\"button\":\"SubmitGroup_button__68UXa\"};","import { useSelector } from 'react-redux'\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { Button } from 'components/ui/Button'\nimport { Loader } from 'components/Loader'\nimport { OrderConfirmationModal } from './OrderConfirmationModal'\nimport { ErrorModal, useErrorModal } from 'components/ErrorModal'\nimport useOrderPriceCalculator from './hooks/useOrderPriceCalculator'\nimport { useAppDispatch } from 'store/store'\nimport { selectBun, selectFillings } from 'store/burgerConstructor/burgerConstructor.selectors'\nimport { placeOrderRequest } from 'store/order/order.operations'\nimport { selectOrderState } from 'store/order/order.selectors'\nimport { IIngredient } from 'shared/types'\nimport styles from './SubmitGroup.module.css'\n\nexport const SubmitGroup = () => {\n  const dispatch = useAppDispatch()\n  const { isFetching, error } = useSelector(selectOrderState)\n  const bun = useSelector(selectBun)\n  const fillings = useSelector(selectFillings)\n  const orderPrice = useOrderPriceCalculator()\n  const {\n    isModalOpen,\n    openModal,\n  } = useErrorModal()\n\n  const handlePlaceOrderClick = () => {\n    if (bun && fillings.length) {\n      const ingredients = [bun, ...fillings]\n        .map((ingredient: IIngredient) => ingredient._id)\n\n      dispatch(placeOrderRequest({ ingredients }))\n        .then(() => openModal())\n    }\n  }\n\n  return (\n    <>\n      <div className={`${styles.root} mt-10 pr-4 pl-4`}>\n        <span className='text text_type_digits-medium mr-10'>\n          {orderPrice}\n          {' '}\n          <CurrencyIcon type='primary' />\n        </span>\n        <div className={styles.button}>\n          <Button\n            type='button'\n            view='primary'\n            size='large'\n            onClick={handlePlaceOrderClick}\n            disabled={!bun || !fillings.length}\n          >\n            Place an order\n          </Button>\n          {isFetching && <Loader/>}\n        </div>\n        <OrderConfirmationModal/>\n        {error &&\n          <ErrorModal\n            isOpen={isModalOpen}\n            errorText={error}\n          />\n        }\n      </div>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerConstructor_root__fVIgZ\",\"isHovered\":\"BurgerConstructor_isHovered__i8Ijv\"};","import { useDrop } from 'react-dnd'\nimport { BunElement } from './BunElement'\nimport { FillingList } from './FillingList'\nimport { SubmitGroup } from './SubmitGroup'\nimport { useAppDispatch } from 'store/store'\nimport { addBun, addFilling } from 'store/burgerConstructor/burgerConstructor.slice'\nimport { IIngredient } from 'shared/types'\nimport styles from './BurgerConstructor.module.css'\n\nexport const BurgerConstructor = () => {\n  const dispatch = useAppDispatch()\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'ingredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver()\n    }),\n    drop: (item: IIngredient) => {\n      handleDrop(item)\n    },\n  })\n\n  const handleDrop = (ingredient: IIngredient) => {\n    if (ingredient.type === 'bun') {\n      dispatch(addBun(ingredient))\n    } else {\n      dispatch(addFilling(ingredient))\n    }\n  }\n\n  return (\n    <section className={`${styles.root} pt-25 pb-10`}>\n      <div ref={dropRef} className={isHovered ? `${styles.isHovered}` : ''}>\n        <BunElement type='top'/>\n        <FillingList/>\n        <BunElement type='bottom'/>\n      </div>\n      <SubmitGroup/>\n    </section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerBuilder_root__M-A1J\"};","import { useSelector } from 'react-redux'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { Loader } from 'components/Loader'\nimport { BurgerIngredients } from 'components/BurgerIngredients'\nimport { BurgerConstructor } from 'components/BurgerConstructor'\nimport { selectAuthState } from 'store/auth/auth.selectors'\nimport styles from './BurgerBuilder.module.css'\n\nconst BurgerBuilder = () => {\n  const { isCheckingUserAccess, isUpdatingToken } = useSelector(selectAuthState)\n\n  return (\n    isCheckingUserAccess || isUpdatingToken\n    ? <Loader/>\n    : <div className={styles.root}>\n        <DndProvider backend={HTML5Backend}>\n          <BurgerIngredients/>\n          <BurgerConstructor/>\n        </DndProvider>\n      </div>\n  )\n}\n\nexport default BurgerBuilder\n"],"names":["ErrorMessage","_ref","children","_jsx","className","concat","styles","ingredients","ingredientId","reduce","count","ingredient","_id","selectFillings","createSelector","state","burgerConstructor","fillings","entities","Object","values","selectBun","bun","selectAllIngredients","Ingredient","id","dispatch","useAppDispatch","useSelector","selectIngredientById","name","image","price","ingredientCount","useIngredientCount","beingDragged","dragRef","useDrag","type","item","collect","monitor","isDragging","_Fragment","_jsxs","ref","onClick","setPreviewedIngredientId","handleIngredientClick","src","alt","CurrencyIcon","Counter","size","IngredientList","ingredientIds","map","IngredientGroup","forwardRef","label","isFetching","selectIsFetching","selectIngredientIdsByType","Loader","Modal","isOpen","onClose","onBackdropClick","createPortal","CloseIcon","document","querySelector","NutritionFacts","calories","carbohydrates","fat","proteins","image_large","descriptionTermClasses","descriptionDetailsClasses","NutritionFactsModal","isModalOpen","previewedIngredientId","closeModal","closeByBackdropClick","useNutritionFactsModal","setIsModalOpen","useState","selectPreviewedIngredientId","openModal","useCallback","clearPreviewedIngredientId","closeByEsc","e","KeyboardEvent","code","useEffect","addEventListener","removeEventListener","target","currentTarget","IngredientGroups","currentTab","setCurrentTab","ingredientsRef","useRef","ingredientGroupRefs","forEach","group","createRef","handleTabClick","ingredientGroupType","selectedGroup","find","current","scrollIntoView","behavior","handleIngredientsScroll","_ingredientsRef$curre","lineY","getBoundingClientRect","y","offsets","Math","abs","minOffsetIndex","indexOf","min","BurgerIngredients","useIngredientsScroll","Tab","active","value","onScroll","_ref2","BunElement","ConstructorElement","text","thumbnail","isLocked","FillingListItem","index","isHovered","dropRef","useDrop","accept","isOver","drop","moveFilling","fromIndex","toIndex","DragIcon","handleClose","handleRemoveFilling","removeFilling","FillingList","i","OrderConfirmation","orderNumber","successImage","selectOrderState","order","selectOrderNumber","number","OrderConfirmationModal","useOrderConfirmationModal","clearOrderNumber","clearIngredients","useErrorModal","clearError","ErrorModal","errorText","useMemo","prev","filling","SubmitGroup","error","orderPrice","useOrderPriceCalculator","Button","view","handlePlaceOrderClick","length","placeOrderRequest","then","disabled","BurgerConstructor","handleDrop","addBun","addFilling","BurgerBuilder","isCheckingUserAccess","isUpdatingToken","selectAuthState","DndProvider","backend","HTML5Backend"],"sourceRoot":""}