{"version":3,"file":"static/js/168.4ae765a9.chunk.js","mappings":"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","sources":["webpack://stellar-burgers/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.tsx","webpack://stellar-burgers/./src/components/NutritionFacts/NutritionFacts.module.css?58df","components/NutritionFacts/NutritionFacts.tsx","webpack://stellar-burgers/./src/components/Ingredient/Ingredient.module.css?c283","components/Ingredient/Ingredient.tsx","webpack://stellar-burgers/./src/components/IngredientList/IngredientList.module.css?3cb3","components/IngredientList/IngredientList.tsx","components/IngredientGroup/IngredientGroup.tsx","shared/constants/ingredient-groups.ts","webpack://stellar-burgers/./src/components/BurgerIngredients/BurgerIngredients.module.css?02b9","components/BurgerIngredients/BurgerIngredients.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BunElement/BunElement.module.css?ca38","components/BurgerConstructor/BunElement/BunElement.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/FillingElement/FillingElement.module.css?e20a","components/BurgerConstructor/FillingElement/FillingElement.tsx","store/order/selectors.ts","webpack://stellar-burgers/./src/components/OrderConfirmation/OrderConfirmation.module.css?c6e1","components/OrderConfirmation/OrderConfirmation.tsx","webpack://stellar-burgers/./src/components/BurgerConstructor/BurgerConstructor.module.css?285f","components/BurgerConstructor/BurgerConstructor.tsx","webpack://stellar-burgers/./src/pages/BurgerBuilder/BurgerBuilder.module.css?917a","pages/BurgerBuilder/BurgerBuilder.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Modal_root__z7+I3\",\"isOpen\":\"Modal_isOpen__zYv3o\",\"container\":\"Modal_container__Ha+Ky\",\"closeButton\":\"Modal_closeButton__Ya+Ev\"};","import { ReactNode } from 'react'\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport styles from './Modal.module.css'\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void | undefined;\n  children: ReactNode;\n}\n\nexport const Modal = (props: ModalProps) => {\n  const {\n    isOpen,\n    onClose,\n    children,\n  } = props\n\n  return (\n    <div className={`${styles.root} ${isOpen ? `${styles.isOpen}` : ''}`}>\n      <div className={styles.container}>\n        {children}\n        <button\n          className={styles.closeButton}\n          type='button'\n          aria-label='Close modal'\n          onClick={onClose}\n        >\n          <CloseIcon type=\"primary\"/>\n        </button>\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NutritionFacts_root__RjsFs\",\"heading\":\"NutritionFacts_heading__3ISmc\",\"image\":\"NutritionFacts_image__p-fix\",\"list\":\"NutritionFacts_list__on7pF\",\"listItem\":\"NutritionFacts_listItem__ffIlj\"};","import { IIngredient } from '../../shared/types/ingredient'\nimport styles from './NutritionFacts.module.css'\n\nexport const NutritionFacts = (props: IIngredient) => {\n  const {\n    name,\n    calories,\n    carbohydrates,\n    fat,\n    proteins,\n    image_large,\n  } = props\n\n  const descriptionTermClasses = 'mb-2 text text_type_main-default text_color_inactive'\n  const descriptionDetailsClasses = 'mb-2 text text_type_digits-default text_color_inactive'\n\n  return (\n    <div className={`${styles.root} pt-10 pr-10 pb-15 pl-10`}>\n      <h2 className={`${styles.heading} mt-4 mb-4 text text_type_main-large`}>Nutrition Facts</h2>\n      <img className={styles.image} src={image_large} alt={name}/>\n      <p className='mt-4 mb-8 text text_type_main-medium'>{name}</p>\n      <dl className={styles.list}>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Calories</dt>\n          <dd className={descriptionDetailsClasses}>{calories}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Carb.</dt>\n          <dd className={descriptionDetailsClasses}>{carbohydrates}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Total Fat</dt>\n          <dd className={descriptionDetailsClasses}>{fat}</dd>\n        </div>\n        <div className={styles.listItem}>\n          <dt className={descriptionTermClasses}>Protein</dt>\n          <dd className={descriptionDetailsClasses}>{proteins}</dd>\n        </div>\n      </dl>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ingredient_root__Zh74E\",\"beingDragged\":\"Ingredient_beingDragged__pJKPQ\",\"name\":\"Ingredient_name__bUorL\",\"price\":\"Ingredient_price__CIEQs\"};","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDrag } from 'react-dnd'\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { Modal } from '../Modal'\nimport { NutritionFacts } from '../NutritionFacts'\nimport { selectIngredientById } from '../../store/ingredients/selectors'\nimport { selectIngredientCount } from '../../store/burgerConstructor/selectors'\nimport { IRootState } from '../../store/store'\nimport styles from './Ingredient.module.css'\n\ninterface IngredientProps {\n  id: string;\n}\n\nexport const Ingredient = ({ id }: IngredientProps) => {\n  const ingredient = useSelector((state: IRootState) => selectIngredientById(state, id))\n  const { name, image, price } = ingredient!\n  const count = useSelector(state => selectIngredientCount(state, id))\n  const [isNutritionFactsModalOpen, setIsNutritionFactsModalOpen] = useState(false)\n\n  const [{ beingDragged }, dragRef] = useDrag({\n    type: 'ingredient',\n    item: ingredient,\n    collect: monitor => ({\n      beingDragged: monitor.isDragging(),\n    }),\n  })\n\n  const handleIngredientClick = () => {\n    setIsNutritionFactsModalOpen(true)\n  }\n\n  const handleModalClose = () => setIsNutritionFactsModalOpen(false)\n\n  return (\n    <>\n      <li\n        ref={dragRef}\n        className={`${styles.root} ${beingDragged ? `${styles.beingDragged}` : ''}`}\n        onClick={handleIngredientClick}\n      >\n        <img className='mr-4 ml-4' src={image} alt={name}/>\n        <div className='pt-2'>\n          <p className={`${styles.price} text text_type_digits-default`}>\n            <span className='mr-2'>{price}</span>\n            <CurrencyIcon type='primary'/>\n          </p>\n          <p className={`${styles.name} text text_type_main-default mt-2`}>{name}</p>\n        </div>\n        {count > 0 && <Counter count={count} size='default'/>}\n      </li>\n      {isNutritionFactsModalOpen &&\n        <Modal\n          isOpen={isNutritionFactsModalOpen}\n          onClose={handleModalClose}\n        >\n          <NutritionFacts\n            {...ingredient!}\n          />\n        </Modal>\n      }\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"IngredientList_root__1m0nr\"};","import { Ingredient } from '../Ingredient'\nimport styles from './IngredientList.module.css'\n\ninterface IngredientListProps {\n  ingredientIds: string[];\n}\n\nexport const IngredientList = ({ ingredientIds }: IngredientListProps) => (\n  <ul className={`${styles.root} pr-4 pb-10 pl-4`}>\n    {ingredientIds.map(ingredientId => (\n      <Ingredient\n        key={ingredientId}\n        id={ingredientId}\n      />\n    ))}\n  </ul>\n)\n","import { forwardRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Loader } from '../Loader'\nimport { IngredientList } from '../IngredientList'\nimport { capitalizeFirstLetter } from '../../shared/helpers/capitalize-first-letter'\nimport { selectIsFetching, selectIngredientIdsByType } from '../../store/ingredients/selectors'\nimport { IRootState } from '../../store/store'\n\ninterface IngredientGroupProps {\n  type: string;\n}\n\nexport const IngredientGroup = forwardRef<HTMLHeadingElement, IngredientGroupProps>(\n  ({ type }, ref) => {\n\n  const isFetching = useSelector(selectIsFetching)\n  const ingredientIds = useSelector((state: IRootState) => selectIngredientIdsByType(state, type))\n\n  if (isFetching) return <Loader/>\n\n  return (\n    <li>\n      <h2 ref={ref} className='text text_type_main-medium mb-6'>{capitalizeFirstLetter(type)}</h2>\n      <IngredientList\n        ingredientIds={ingredientIds}\n      />\n    </li>\n  )\n})\n","export const IngredientGroups = {\n  BUNS: 'BUNS',\n  BURGERS: 'BURGERS',\n  TOPPINGS: 'TOPPINGS',\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tabBar\":\"BurgerIngredients_tabBar__jn4fI\",\"menu\":\"BurgerIngredients_menu__X3WWl\"};","import { useState, useRef } from 'react'\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/tab'\nimport { IngredientGroup } from '../IngredientGroup'\nimport { IngredientGroups } from '../../shared/constants/ingredient-groups'\nimport { capitalizeFirstLetter } from '../../shared/helpers/capitalize-first-letter'\nimport styles from './BurgerIngredients.module.css'\n\nconst { BUNS, BURGERS, TOPPINGS } = IngredientGroups\n\nexport const BurgerIngredients = () => {\n  const [currentTab, setCurrentTab] = useState(IngredientGroups.BUNS)\n  const ingredientsRef = useRef<HTMLUListElement>(null)\n  const bunsIngredientGroupRef = useRef<HTMLHeadingElement>(null)\n  const burgersIngredientGroupRef = useRef<HTMLHeadingElement>(null)\n  const toppingsIngredientGroupRef = useRef<HTMLHeadingElement>(null)\n\n  const scrollToRef = (ref: React.RefObject<HTMLHeadingElement>) => {\n    if (ref.current) {\n      ref.current.scrollIntoView({ behavior: 'smooth' })\n    }\n  }\n\n  const handleTabClick = (ingredientGroup: string) => {\n\t\tswitch (ingredientGroup) {\n\t\t\tcase BUNS: {\n        scrollToRef(bunsIngredientGroupRef)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase BURGERS: {\n        scrollToRef(burgersIngredientGroupRef)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase TOPPINGS: {\n        scrollToRef(toppingsIngredientGroupRef)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n  const handleIngredientsScroll = () => {\n    const lineY = ingredientsRef.current?.getBoundingClientRect().y\n    const bunsOffset = Math.abs(bunsIngredientGroupRef.current!.getBoundingClientRect().y - (lineY as number))\n    const burgersOffset = Math.abs(burgersIngredientGroupRef.current!.getBoundingClientRect().y - (lineY as number))\n\t\tconst toppingsOffset = Math.abs(toppingsIngredientGroupRef.current!.getBoundingClientRect().y - (lineY as number))\n\n    if (bunsOffset < burgersOffset && bunsOffset < toppingsOffset)\n      setCurrentTab(BUNS)\n\t\tif (burgersOffset < bunsOffset && burgersOffset < toppingsOffset)\n      setCurrentTab(BURGERS)\n    if (toppingsOffset < bunsOffset && toppingsOffset < burgersOffset)\n      setCurrentTab(TOPPINGS)\n  }\n\n  return (\n    <section className='mt-10'>\n      <h1 className='text text_type_main-large'>Build Your Own Burger</h1>\n      <ul className={`${styles.tabBar} mt-5`}>\n        {[BUNS, BURGERS, TOPPINGS].map(item => (\n          <li key={item}>\n            <Tab\n              active={currentTab === item}\n              value={item}\n              onClick={handleTabClick}\n            >\n              {capitalizeFirstLetter(item)}\n            </Tab>\n          </li>\n        ))}\n      </ul>\n      <ul\n        className={`${styles.menu} custom-scroll`}\n        ref={ingredientsRef}\n        onScroll={handleIngredientsScroll}\n      >\n        <IngredientGroup\n          type='bun'\n          ref={bunsIngredientGroupRef}\n        />\n        <IngredientGroup\n          type='burger'\n          ref={burgersIngredientGroupRef}\n        />\n        <IngredientGroup\n          type='topping'\n          ref={toppingsIngredientGroupRef}\n        />\n      </ul>\n    </section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BunElement_root__P2lJ4\"};","import { useSelector } from 'react-redux'\nimport { selectBun } from '../../../store/burgerConstructor/selectors'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport styles from './BunElement.module.css'\n\ninterface IBunElementProps {\n  type: 'top' | 'bottom';\n}\n\nexport const BunElement = ({ type }: IBunElementProps) => {\n  const bun = useSelector(selectBun)\n\n  return (\n    <div className={`${styles.root} ml-8 pr-4`}>\n      <ConstructorElement\n        type={type}\n        text={bun ? `${bun.name} ${type === 'top' ? '(top)' : '(bottom)'}` : 'Choose your bun'}\n        price={bun ? bun.price : 0}\n        thumbnail={bun ? bun.image : 'https://stellarburgers.nomoreparties.site/static/media/loading.89540200.svg'}\n        isLocked\n      />\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FillingElement_root__FytXY\",\"isHovered\":\"FillingElement_isHovered__BcHD9\"};","import { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { DragIcon } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons'\nimport { useAppDispatch } from '../../../store/store'\nimport { fillingMoved, fillingDeleted } from '../../../store/burgerConstructor/operations'\nimport { IIngredient } from '../../../shared/types/ingredient'\nimport styles from './FillingElement.module.css'\n\ninterface IFillingElementProps {\n  index: number;\n  ingredient: IIngredient;\n}\n\ninterface IDraggedItem {\n  index: number;\n}\n\nexport const FillingElement = ({ index, ingredient }: IFillingElementProps) => {\n  const dispatch = useAppDispatch()\n  const { name, price, image } = ingredient\n\n  const [, dragRef] = useDrag({\n    type: 'addedIngredient',\n    item: () => {\n      return { index }\n    },\n  })\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'addedIngredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver(),\n    }),\n    drop: (item: IDraggedItem) => {\n      if (item.index === index) return\n\n      dispatch(fillingMoved({ fromIndex: item.index, toIndex: index }))\n    },\n  })\n\n  const onDelete = () => dispatch(fillingDeleted(index))\n\n\n  const ref = useRef<HTMLLIElement>(null)\n  dragRef(dropRef(ref))\n\n  return (\n    <li\n      ref={ref}\n      className={`${styles.root} ${isHovered ? `${styles.isHovered}` : ''} mt-4 mb-4`}\n    >\n      <DragIcon type=\"primary\"/>\n      <ConstructorElement\n        text={name}\n        thumbnail={image}\n        price={price}\n        handleClose={onDelete}\n      />\n    </li>\n  )\n}\n","import { IRootState } from '../store'\n\nconst selectOrderState = (state: IRootState) => state.order\n\nconst selectOrderNumber = (state: IRootState) => state.order.number\n\nexport {\n  selectOrderState,\n  selectOrderNumber,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OrderConfirmation_root__25rwU\",\"orderNumber\":\"OrderConfirmation_orderNumber__h5AyN\"};","import { useSelector } from 'react-redux'\nimport { selectOrderNumber } from '../../store/order/selectors'\nimport successImage from '../../images/success.png'\nimport styles from './OrderConfirmation.module.css'\n\nexport const OrderConfirmation = () => {\n  const orderNumber = useSelector(selectOrderNumber)\n\n  return (\n    <div className={`${styles.root} pt-25 pr-10 pb-25 pl-10`}>\n      <span className='mb-8 text text_type_main-medium'>Your order number is</span>\n      <h2 className={`${styles.orderNumber} text text_type_digits-large`}>{orderNumber}</h2>\n      <img className='mt-15 mb-15' src={successImage} alt='Success icon'/>\n      <p className=\"mb-2 text text_type_main-default\">your order is being prepared</p>\n      <p className=\"text text_type_main-default text_color_inactive\">be ready to pick it up at the orbital station</p>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerConstructor_root__fVIgZ\",\"isHovered\":\"BurgerConstructor_isHovered__i8Ijv\",\"list\":\"BurgerConstructor_list__kWLPi\",\"submitGroup\":\"BurgerConstructor_submitGroup__5hVZf\",\"submitButton\":\"BurgerConstructor_submitButton__9Jl+A\"};","import { useState, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDrop } from 'react-dnd'\nimport { BunElement } from './BunElement'\nimport { FillingElement } from './FillingElement'\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/button'\nimport { Loader } from '../Loader'\nimport { Modal } from '../Modal'\nimport { OrderConfirmation } from '../OrderConfirmation'\nimport { selectBun, selectFillings } from '../../store/burgerConstructor/selectors'\nimport { selectOrderState } from '../../store/order/selectors'\nimport {\n  bunAdded,\n  fillingAdded,\n  ingredientsCleared,\n} from '../../store/burgerConstructor/operations'\nimport { placeOrderRequest } from '../../store/order/operations'\nimport { orderNumberCleared } from '../../store/order/operations'\nimport { IIngredient } from '../../shared/types/ingredient'\nimport { useAppDispatch } from '../../store/store'\nimport styles from './BurgerConstructor.module.css'\n\nexport const BurgerConstructor = () => {\n  const dispatch = useAppDispatch()\n  const bun = useSelector(selectBun)\n  const fillings = useSelector(selectFillings)\n  const { isFetching } = useSelector(selectOrderState)\n  const [isOrderDetailsModalOpen, setIsOrderDetailsModalOpen] = useState(false)\n\n  const [{ isHovered }, dropRef] = useDrop({\n    accept: 'ingredient',\n    collect: monitor => ({\n      isHovered: monitor.isOver()\n    }),\n    drop: (item: IIngredient) => {\n      handleDrop(item)\n    },\n  })\n\n  const handleDrop = (ingredient: IIngredient) => {\n    if (ingredient.type === 'bun') {\n      dispatch(bunAdded(ingredient))\n    } else {\n      dispatch(fillingAdded(ingredient))\n    }\n  }\n\n  const bunsPrice = useMemo(() => bun ? bun.price * 2 : 0, [bun])\n  const fillingsPrice = useMemo(() => fillings.reduce((prev: number, filling: IIngredient) => prev + filling.price, 0), [fillings])\n  const totalPrice = bunsPrice + fillingsPrice\n\n  const handlePlaceOrderClick = () => {\n    if (bun && fillings.length) {\n\n      const ingredients = [bun, ...fillings, bun]\n        .map((ingredient: IIngredient) => ingredient._id)\n\n      dispatch(placeOrderRequest({ ingredients }))\n        .then(() => setIsOrderDetailsModalOpen(true))\n\n    }\n  }\n\n  const handleModalClose = () => {\n    dispatch(orderNumberCleared())\n    dispatch(ingredientsCleared())\n    setIsOrderDetailsModalOpen(false)\n  }\n\n  return (\n    <section className={`${styles.root} pt-25 pb-10`}>\n      <div ref={dropRef} className={isHovered ? `${styles.isHovered}` : ''}>\n        <BunElement type='top'/>\n        <ul className={`${styles.list} custom-scroll`}>\n          {fillings.map((ingredient: IIngredient, i) => (\n            <FillingElement\n              key={i}\n              index={i}\n              ingredient={ingredient}\n            />\n          ))}\n        </ul>\n        <BunElement type='bottom'/>\n      </div>\n      <div className={`${styles.submitGroup} mt-10 pr-4 pl-4`}>\n        <span className='text text_type_digits-medium mr-10'>\n          {totalPrice}\n          {' '}\n          <CurrencyIcon type='primary' />\n        </span>\n        <div className={styles.submitButton}>\n          <Button\n            type='primary'\n            size='large'\n            htmlType='button'\n            onClick={handlePlaceOrderClick}\n            disabled={!bun || !fillings.length}\n          >\n            Place an order\n          </Button>\n          {isFetching && <Loader/>}\n        </div>\n      </div>\n      {isOrderDetailsModalOpen &&\n        <Modal\n          isOpen={isOrderDetailsModalOpen}\n          onClose={handleModalClose}\n        >\n          <OrderConfirmation/>\n        </Modal>\n      }\n      {/* TODO: notify user if there is an error sending order */}\n    </section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BurgerBuilder_root__M-A1J\"};","import { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { BurgerIngredients } from '../../components/BurgerIngredients'\nimport { BurgerConstructor } from '../../components/BurgerConstructor'\nimport styles from './BurgerBuilder.module.css'\n\nconst BurgerBuilder = () => (\n  <div className={styles.root}>\n    <DndProvider backend={HTML5Backend}>\n      <BurgerIngredients/>\n      <BurgerConstructor/>\n    </DndProvider>\n  </div>\n)\n\nexport default BurgerBuilder\n"],"names":["Modal","props","isOpen","onClose","children","_jsx","className","concat","styles","_jsxs","type","onClick","CloseIcon","NutritionFacts","name","calories","carbohydrates","fat","proteins","image_large","descriptionTermClasses","descriptionDetailsClasses","src","alt","Ingredient","_ref","id","ingredient","useSelector","state","selectIngredientById","_ref2","image","price","count","selectIngredientCount","_useState","useState","_useState2","_slicedToArray","isNutritionFactsModalOpen","setIsNutritionFactsModalOpen","_useDrag","useDrag","item","collect","monitor","beingDragged","isDragging","_useDrag2","dragRef","_Fragment","ref","CurrencyIcon","Counter","size","_objectSpread","IngredientList","ingredientIds","map","ingredientId","IngredientGroup","forwardRef","isFetching","selectIsFetching","selectIngredientIdsByType","Loader","capitalizeFirstLetter","IngredientGroups","BUNS","BURGERS","TOPPINGS","BurgerIngredients","currentTab","setCurrentTab","ingredientsRef","useRef","bunsIngredientGroupRef","burgersIngredientGroupRef","toppingsIngredientGroupRef","scrollToRef","current","scrollIntoView","behavior","handleTabClick","ingredientGroup","Tab","active","value","onScroll","_ingredientsRef$curre","lineY","getBoundingClientRect","y","bunsOffset","Math","abs","burgersOffset","toppingsOffset","BunElement","bun","selectBun","ConstructorElement","text","thumbnail","isLocked","FillingElement","index","dispatch","useAppDispatch","_useDrop","useDrop","accept","isHovered","isOver","drop","fillingMoved","fromIndex","toIndex","_useDrop2","dropRef","DragIcon","handleClose","fillingDeleted","selectOrderState","order","selectOrderNumber","number","OrderConfirmation","orderNumber","successImage","BurgerConstructor","fillings","selectFillings","isOrderDetailsModalOpen","setIsOrderDetailsModalOpen","handleDrop","bunAdded","fillingAdded","totalPrice","useMemo","reduce","prev","filling","i","Button","htmlType","length","ingredients","_toConsumableArray","_id","placeOrderRequest","then","disabled","orderNumberCleared","ingredientsCleared","DndProvider","backend","HTML5Backend"],"sourceRoot":""}